openapi: 3.0.0
info:
  description: ''
  title: Cube COS API
  contact: {}
  version: 1.0.0
paths:
  "/api/v1/logout":
    post:
      operationId: logout
      tags:
      - Logout
      summary: Logout from the system and redirect to login page
      responses:
        '302':
          description: Found and redirect to login page
  "/api/v1/datacenters/{dataCenter}/me":
    get:
      operationId: getMe
      tags:
      - User Info
      summary: Retrieve the own user info
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      responses:
        '200':
          description: Retrieve the own user info successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetMeResponse"
              examples:
                example1:
                  summary: Own user info
                  value:
                    code: 200
                    data:
                      name: admin
                    msg: fetch own user info successfully
                    status: ok
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch own user info: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters":
    get:
      operationId: getDataCenters
      description: Retrieve the list of data centers
      tags:
      - Data Centers
      summary: Retrieve the list of data centers
      responses:
        '200':
          description: Retrieve the list of data centers successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetDataCentersResponse"
              examples:
                example:
                  summary: Data centers
                  value:
                    code: 200
                    data:
                    - name: example-data-center
                      version: Cube Appliance 3.0.0
                      virtualIp: 10.10.10.10
                      isLocal: true
                      isHaEnabled: false
                      utcTimeZone: "+00:00"
                      additional:
                        helpUrl: https://www.bigstack.co/contact-us
                    msg: fetch data center list successfully
                    status: ok
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch data centers: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}":
    get:
      operationId: getDataCenter
      description: Retrieve the data center info
      tags:
      - Data Centers
      summary: Retrieve the data center info
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      responses:
        '200':
          description: Retrieve the data center info successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetDataCenterResponse"
              examples:
                example:
                  summary: Data center
                  value:
                    code: 200
                    data:
                      name: example-data-center
                      version: Cube Appliance 3.0.0
                      virtualIp: 10.10.10.10
                      isLocal: true
                      isHaEnabled: false
                      utcTimeZone: "+00:00"
                      additional:
                        helpUrl: https://www.bigstack.co/contact-us
                    msg: fetch data center info successfully
                    status: ok
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch data center: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/services":
    get:
      operationId: getServices
      tags:
      - Services
      summary: Retrieve the list of services
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      responses:
        '200':
          description: Retrieve the list of services successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetServicesResponse"
              examples:
                example:
                  summary: Services
                  value:
                    code: 200
                    data:
                    - name: clusterLink
                      category: core
                      modules:
                      - name: link
                      - name: clock
                      - name: dns
                    - name: clusterSys
                      category: core
                      modules:
                      - name: bootstrap
                      - name: license
                    - name: clusterSettings
                      category: core
                      modules:
                      - name: etcd
                      - name: nodelist
                    - name: haCluster
                      category: core
                      modules:
                      - name: hacluster
                    - name: msgQueue
                      category: core
                      modules:
                      - name: rabbitmq
                    - name: iaasDb
                      category: core
                      modules:
                      - name: mysql
                      - name: mongodb
                    - name: virtualIp
                      category: core
                      modules:
                      - name: vip
                      - name: haproxy_ha
                    - name: storage
                      category: storage
                      modules:
                      - name: ceph
                      - name: ceph_mon
                      - name: ceph_mgr
                      - name: ceph_mds
                      - name: ceph_osd
                      - name: ceph_rgw
                      - name: rbd_target
                    - name: apiService
                      category: core
                      modules:
                      - name: haproxy
                      - name: httpd
                      - name: skyline
                      - name: lmi
                      - name: memcache
                    - name: singleSignOn
                      category: core
                      modules:
                      - name: k3s
                      - name: keycloak
                    - name: network
                      category: cloud computing
                      modules:
                      - name: neutron
                    - name: compute
                      category: cloud computing
                      modules:
                      - name: nova
                      - name: cyborg
                    - name: bareMetal
                      category: cloud computing
                      modules:
                      - name: ironic
                    - name: image
                      category: cloud computing
                      modules:
                      - name: glance
                    - name: blockStor
                      category: cloud computing
                      modules:
                      - name: cinder
                    - name: fileStor
                      category: cloud computing
                      modules:
                      - name: manila
                    - name: objectStor
                      category: cloud computing
                      modules:
                      - name: swift
                    - name: orchestration
                      category: cloud computing
                      modules:
                      - name: heat
                    - name: lbaas
                      category: cloud computing
                      modules:
                      - name: octavia
                    - name: dnsaas
                      category: cloud computing
                      modules:
                      - name: designate
                    - name: k8saas
                      category: cloud computing
                      modules:
                      - name: rancher
                    - name: instanceHa
                      category: cloud computing
                      modules:
                      - name: masakari
                    - name: businessLogic
                      category: cloud computing
                      modules:
                      - name: senlin
                      - name: watcher
                    - name: dataPipe
                      category: infrascope
                      modules:
                      - name: zookeeper
                      - name: kafka
                    - name: metrics
                      category: infrascope
                      modules:
                      - name: monasca
                      - name: telegraf
                      - name: grafana
                    - name: logAnalytics
                      category: infrascope
                      modules:
                      - name: filebeat
                      - name: auditbeat
                      - name: logstash
                      - name: opensearch
                      - name: opensearch-dashboards
                    - name: notifications
                      category: infrascope
                      modules:
                      - name: influxdb
                      - name: kapacitor
                    msg: fetch service details successfully
                    status: ok
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch services: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/events":
    get:
      operationId: getEvents
      tags:
      - Events
      summary: Retrieve the list of events
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: query
        name: type
        required: true
        schema:
          type: string
          enum:
          - system
          - host
          - instance
        description: The type of event to query, the value can be only 'system', 'host',
          and 'instance'.
        example: system
      - in: query
        name: keyword
        required: false
        schema:
          type: string
        description: The keyword of the event to query.
        example: 10.10.10.10 is reachable
      - in: query
        name: id
        required: false
        schema:
          type: string
        description: The id of the event to query.
        example: NET00003I
      - in: query
        name: category
        required: false
        schema:
          type: string
        description: The category of the event to query.
        example: NET
      - in: query
        name: severity
        required: false
        schema:
          type: string
        description: The severity of the event to query, the value can be only 'Info',
          'Warning', and 'Error'.
        example: Info
      - in: query
        name: host
        required: false
        schema:
          type: string
        description: The host of the event to query.
        example: example-node-0
      - in: query
        name: instance
        required: false
        schema:
          type: string
        description: The instance of the event to query.
        example: ccc449e4-a26c-47ac-afc1-c792ab1ed20a
      - in: query
        name: past
        required: false
        schema:
          type: string
        description: The past time of the event to query, use the unit of 's'(second),
          'm'(minute), 'h'(hour), and 'd'(day) suffix to specify the time range.
        example: 1d
      - in: query
        name: start
        required: false
        schema:
          type: string
        description: The start time of the event to query, the value should be in
          RFC3339 format (default is 24 hours ago).
        example: '2025-01-01T01:00:00+00:00'
      - in: query
        name: stop
        required: false
        schema:
          type: string
        description: The end time of the event to query, the value should be in RFC3339
          format (default is now).
        example: '2025-01-01T01:00:00+00:00'
      - in: query
        name: pageNum
        required: false
        schema:
          type: integer
        description: The page number of the event chunking to fetch (default is 1).
        example: 1
      - in: query
        name: pageSize
        required: false
        schema:
          type: integer
        description: The size per page of the events to return (default is unlimit).
        example: 10
      - "$ref": "#/components/parameters/watch"
      responses:
        '200':
          description: Retrieve the list of events successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetEventsResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 400
                  msg:
                    type: string
                    example: 'invalid ''start'' time: 2021-09-01T111:00:00+00:00'
                  status:
                    type: string
                    example: bad request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch events: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/events/filterConditions":
    get:
      operationId: getEventFilterConditions
      tags:
      - Events
      summary: Retrieve the event filter conditions
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: query
        name: past
        required: false
        schema:
          type: string
          enum:
          - 1h
          - 24h
          - 7d
          - 14d
        description: The past time of the filter conditions to query, click 'try it
          out' to see a few options, but can specify with the 's'(second), 'm'(minute),
          'h'(hour), and 'd'(day) suffix for other time ranges.
        example: 1d
      - in: query
        name: start
        required: false
        schema:
          type: string
        description: The start time of the event to query, the value should be in
          RFC3339 format (default is 24 hours ago).
        example: '2025-01-01T01:00:00+00:00'
      - in: query
        name: stop
        required: false
        schema:
          type: string
        description: The end time of the event to query, the value should be in RFC3339
          format (default is now).
        example: '2025-01-01T01:00:00+00:00'
      responses:
        '200':
          description: Retrieve the event filter conditions successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetEventFilterConditionResponse"
              examples:
                example1:
                  summary: Event filter conditions
                  value:
                    code: 200
                    data:
                      system:
                        severities:
                        - Critical
                        - Info
                        - Warning
                        categories:
                        - KSN
                        - NET
                        - SDN
                        - SRV
                      instance:
                        ids:
                        - '028952d3-c0ba-4494-96c0-2bf1bab407e5'
                        - 02ecd121-c19b-41c7-8ed7-390745b01af4
                        - 12893f22-a353-4dce-a164-f889e0f39951
                        - fbd5d7c2-38c8-436b-97f4-d9e5b322d02b
                        categories:
                        - CPU
                        - MEM
                      host:
                        names:
                        - example-node-0
                        categories:
                        - DSK
                        - MEM
                    msg: fetch event filter conditions successfully
                    status: ok
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 400
                  msg:
                    type: string
                    example: 'invalid ''start'' time: 2021-09-01T111:00:00+00:00'
                  status:
                    type: string
                    example: bad request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch event filter conditions: internal server
                      error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/events/abstract":
    get:
      operationId: getAbstractedEvents
      tags:
      - Events
      summary: Retrieve the abstracted events
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: query
        name: type
        required: true
        schema:
          type: string
          enum:
          - system
          - host
          - instance
        description: The type of event to query, the value can be only 'system', 'host',
          and 'instance'.
        example: system
      - in: query
        name: limit
        required: false
        schema:
          type: integer
        description: The limit of the abstracted events to return (default is 10).
        example: 10
      - "$ref": "#/components/parameters/watch"
      responses:
        '200':
          description: Retrieve the abstracted events successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetAbstractedEventsResponse"
              examples:
                example1:
                  summary: Abstracted recent events
                  value:
                    code: 200
                    data:
                      events:
                      - type: system
                        severity: Info
                        id: NET00003I
                        description: instance "ccc449e4-a26c-47ac-afc1-c792ab1ed20a"
                          at 192.168.0.10 is reachable
                        host: ''
                        category: net
                        service: ''
                        metadata:
                          category: net
                          id: ccc449e4-a26c-47ac-afc1-c792ab1ed20a
                          ip: 192.168.0.10
                        time: '2025-02-04T06:05:08+00:00'
                      - type: system
                        severity: Info
                        id: NET00003I
                        description: instance "441ddbcb-c6a3-48cd-933c-c416d52032b8"
                          at 192.168.0.127 is reachable
                        host: ''
                        category: net
                        service: ''
                        metadata:
                          category: net
                          id: 441ddbcb-c6a3-48cd-933c-c416d52032b8
                          ip: 192.168.0.127
                        time: '2025-02-03T19:30:15+00:00'
                      - type: system
                        severity: Info
                        id: NET00003I
                        description: instance "17fa8b83-3f9c-4541-a4a8-10b972f19bd2"
                          at 10.254.1.149 is reachable
                        host: ''
                        category: net
                        service: ''
                        metadata:
                          category: net
                          id: 17fa8b83-3f9c-4541-a4a8-10b972f19bd2
                          ip: 10.254.1.149
                        time: '2025-02-03T19:15:15+00:00'
                      - type: system
                        severity: Info
                        id: SDN00002I
                        description: PROJ001 deleted virtual port 192.168.1.87 (fa:16:3e:b1:5c:89)
                        host: ''
                        category: sdn
                        service: ''
                        metadata:
                          category: sdn
                          device_id: 32f4993f-c692-49c9-9b5e-e1bd1014699e
                          network_id: cae0e230-9713-4717-a94e-7e2a50cb2d86
                          port_id: 5f20ef48-a1ea-4ef9-8463-6a790b2026c2
                        time: '2025-02-03T17:32:09+00:00'
                      - type: system
                        severity: Info
                        id: SDN00002I
                        description: PROJ001 deleted virtual port 192.168.1.5 (fa:16:3e:ce:ab:6b)
                        host: ''
                        category: sdn
                        service: ''
                        metadata:
                          category: sdn
                          device_id: 4222d5e8-ccb2-4069-af14-d8f0fe3fbfea
                          network_id: cae0e230-9713-4717-a94e-7e2a50cb2d86
                          port_id: 1caa0da6-8c58-4a80-9bac-2eda77c23c92
                        time: '2025-02-03T17:32:09+00:00'
                      - type: system
                        severity: Info
                        id: NET00003I
                        description: instance "e5a85381-023c-4087-a607-c74687dc3b52"
                          at 10.254.1.235 is reachable
                        host: ''
                        category: net
                        service: ''
                        metadata:
                          category: net
                          id: e5a85381-023c-4087-a607-c74687dc3b52
                          ip: 10.254.1.235
                        time: '2025-02-03T17:30:15+00:00'
                      - type: system
                        severity: Info
                        id: NET00003I
                        description: instance "66cdfddb-efe1-4b67-b864-76c5d106524c"
                          at 10.254.131.183 is reachable
                        host: ''
                        category: net
                        service: ''
                        metadata:
                          category: net
                          id: 66cdfddb-efe1-4b67-b864-76c5d106524c
                          ip: 10.254.131.183
                        time: '2025-02-03T17:30:15+00:00'
                      - type: system
                        severity: Info
                        id: NET00003I
                        description: instance "f682fc8d-2c8d-4557-9b84-049e5a72b713"
                          at 192.168.0.157 is reachable
                        host: ''
                        category: net
                        service: ''
                        metadata:
                          category: net
                          id: f682fc8d-2c8d-4557-9b84-049e5a72b713
                          ip: 192.168.0.157
                        time: '2025-02-03T17:15:15+00:00'
                      - type: system
                        severity: Info
                        id: NET00003I
                        description: instance "6942ec52-f089-434d-ba5c-6137015b91b1"
                          at 192.168.0.108 is reachable
                        host: ''
                        category: net
                        service: ''
                        metadata:
                          category: net
                          id: 6942ec52-f089-434d-ba5c-6137015b91b1
                          ip: 192.168.0.108
                        time: '2025-02-03T16:50:15+00:00'
                      - type: system
                        severity: Info
                        id: NET00003I
                        description: instance "2d9ce9a4-5fe9-4011-84ae-8ecb20f64594"
                          at 192.168.0.111 is reachable
                        host: ''
                        category: net
                        service: ''
                        metadata:
                          category: net
                          id: 2d9ce9a4-5fe9-4011-84ae-8ecb20f64594
                          ip: 192.168.0.111
                        time: '2025-02-03T16:35:15+00:00'
                      limit:
                        number: 10
                        description: the top 10 recent events
                    msg: fetch event abstract successfully
                    status: ok
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 400
                  msg:
                    type: string
                    example: 'invalid ''start'' time: 2021-09-01T111:00:00+00:00'
                  status:
                    type: string
                    example: bad request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch events: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/events/rank":
    get:
      operationId: getRankedEvents
      tags:
      - Events
      summary: Retrieve the ranked events
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: query
        name: type
        required: true
        schema:
          type: string
          enum:
          - system
          - host
          - instance
        description: The type of event to query, the value can be only 'system', 'host',
          and 'instance'.
        example: system
      - in: query
        name: category
        required: false
        schema:
          type: string
        description: The category of the event to query.
        example: NET
      - in: query
        name: severity
        required: false
        schema:
          type: string
        description: The severity of the event to query, the value can be only 'Info',
          'Warning', and 'Error'.
        example: Info
      - in: query
        name: host
        required: false
        schema:
          type: string
        description: The host of the event to query.
        example: example-data-center
      - in: query
        name: instance
        required: false
        schema:
          type: string
        description: The instance of the event to query.
        example: ccc449e4-a26c-47ac-afc1-c792ab1ed20a
      - in: query
        name: past
        required: false
        schema:
          type: string
          enum:
          - 1h
          - 24h
          - 7d
          - 14d
        description: The past time of the event rank to query, click 'try it out'
          to see a few options, but can specify with the 's'(second), 'm'(minute),
          'h'(hour), and 'd'(day) suffix for other time ranges.
        example: 1d
      - in: query
        name: start
        required: false
        schema:
          type: string
        description: The start time of the event to query, the value should be in
          RFC3339 format (default is 24 hours ago).
        example: '2025-01-01T01:00:00+00:00'
      - in: query
        name: stop
        required: false
        schema:
          type: string
        description: The end time of the event to query, the value should be in RFC3339
          format (default is now).
        example: '2025-01-01T01:00:00+00:00'
      - in: query
        name: limit
        required: false
        schema:
          type: integer
        description: The limit of the rank of event to return (default is 10).
        example: 10
      - "$ref": "#/components/parameters/watch"
      responses:
        '200':
          description: Retrieve the rank of event successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetRankedEventsResponse"
              examples:
                example1:
                  summary: Ranked events
                  value:
                    code: 200
                    data:
                      events:
                      - id: NET00003I
                        percent: 98.2142
                        number: 440
                        query: https://example-datat-center.host/api/v1/datacenters/example-data-center/events?type=system&id=NET00003I&start=2024-12-01T00:00:00Z&stop=2025-02-17T00:00:00Z&pageNum=1&pageSize=20
                      - id: NET00001I
                        percent: 1.7857
                        number: 8
                        query: https://example-datat-center.host/api/v1/datacenters/example-data-center/events?type=system&id=NET00001I&start=2024-12-01T00:00:00Z&stop=2025-02-17T00:00:00Z&pageNum=1&pageSize=20
                      limit:
                        number: 25
                        description: The top 2 event IDs with the highest proportion
                    msg: fetch event rank successfully
                    status: ok
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 400
                  msg:
                    type: string
                    example: 'invalid ''start'' time: 2021-09-01T111:00:00+00:00'
                  status:
                    type: string
                    example: bad request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch events: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/healths":
    get:
      operationId: getHealths
      tags:
      - Health
      summary: Retrieve the overall health status of all modules
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - "$ref": "#/components/parameters/watch"
      responses:
        '200':
          description: Retrieve the list of health successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetHealthsResponse"
              examples:
                example1:
                  summary: Health check ok
                  value:
                    code: 200
                    data:
                      overall:
                        status:
                          current: ok
                          isFixing: false
                      services:
                      - name: clusterLink
                        category: core
                        status:
                          current: ok
                        modules:
                        - name: link
                          status:
                            current: ok
                    msg: fetch health successfully
                    status: ok
                example2:
                  summary: Health check ng
                  value:
                    code: 200
                    data:
                      overall:
                        status:
                          current: ng
                          isFixing: false
                          description: ceph has 2 ceph_osd down
                      services:
                      - name: storage
                        category: storage
                        status:
                          current: ng
                        modules:
                        - name: ceph_osd
                          status:
                            current: ng
                            description: ceph has 2 ceph_osd down
                    msg: fetch health successfully
                    status: ok
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch health checks: internal server error'
                  status:
                    type: string
                    example: internal server error
    patch:
      operationId: repairAllModulesHealth
      tags:
      - Health
      summary: Repair the health for all modules
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      responses:
        '202':
          description: The Request of the all modules repair is accepted
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PatchRepairResponse"
              examples:
                example1:
                  summary: Accept the repair request
                  value:
                    code: 202
                    msg: the request of all modules repair is accepted and repairing
                    status: accepted
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 409
                  msg:
                    type: string
                    example: the repair process is already running
                  status:
                    type: string
                    example: conflict
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: failed to request repair
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/healths/services/{serviceType}":
    get:
      operationId: getServiceHealthHistory
      tags:
      - Health
      summary: Retrieve the all modules health status from a service
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: path
        name: serviceType
        required: true
        schema:
          type: string
          enum:
          - clusterLink
          - clusterSys
          - clusterSettings
          - haCluster
          - msgQueue
          - iaasDb
          - virtualIp
          - storage
          - apiService
          - singleSignOn
          - network
          - compute
          - bareMetal
          - image
          - blockStor
          - fileStor
          - objectStor
          - orchestration
          - lbaas
          - dnsaas
          - k8saas
          - instanceHa
          - businessLogic
          - dataPipe
          - metrics
          - logAnalytics
          - notifications
        description: The name of the service to retrieve health history. use GET /api/v1/datacenters/{dataCenter}/services
          to get the service list and their modules.
      - "$ref": "#/components/parameters/watch"
      responses:
        '200':
          description: Retrieve the health history of service successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetServiceHealthHistoryResponse"
              examples:
                example1:
                  summary: Health result of service
                  value:
                    code: 200
                    data:
                    - category: cloud computing
                      service: compute
                      module: nova
                      history:
                      - time: '2025-02-15T08:44:36+00:00'
                        status: ng
                        error:
                          type: service down
                          reason: 1 node down
                          nodes:
                          - example-data-center
                          description: nova has 1 node down due to the memory exhausted,
                            and the abnormal memory competition from PID(24887) is
                            detected
                          details: "{ ... the best efforts of error summary / direction
                            ...} "
                          log: http://{dataCenter}:8888/log/nova/example-data-center-20250205113459-b3gc.log
                      - time: '2025-02-15T08:49:36+00:00'
                        status: ok
                      - time: '2025-02-15T08:54:36+00:00'
                        status: ok
                      - time: '2025-02-15T08:59:36+00:00'
                        status: ok
                      - time: '2025-02-15T09:04:36+00:00'
                        status: ok
                      - time: '2025-02-15T09:09:36+00:00'
                        status: ng
                        error:
                          type: service down
                          reason: 1 node down
                          nodes:
                          - example-data-center
                          description: nova has 1 node down due to the memory exhausted,
                            and the abnormal memory competition from PID(24887) is
                            detected
                          details: "{ ... the best efforts of error summary / direction
                            ...} "
                          log: http://{dataCenter}:8888/log/nova/example-data-center-20250205113459-b3gc.log
                      - time: '2025-02-15T09:14:36+00:00'
                        status: ok
                      - time: '2025-02-15T09:19:36+00:00'
                        status: ok
                      - time: '2025-02-15T09:24:36+00:00'
                        status: ok
                      - time: '2025-02-15T09:29:36+00:00'
                        status: ok
                      - time: '2025-02-15T09:34:36+00:00'
                        status: ng
                        error:
                          type: service down
                          reason: 1 node down
                          nodes:
                          - example-data-center
                          description: nova has 1 node down due to the memory exhausted,
                            and the abnormal memory competition from PID(24887) is
                            detected
                          details: "{ ... the best efforts of error summary / direction
                            ...} "
                          log: http://{dataCenter}:8888/log/nova/example-data-center-20250205113459-b3gc.log
                      - time: '2025-02-15T09:39:36+00:00'
                        status: ok
                      - time: '2025-02-15T09:44:36+00:00'
                        status: ok
                    - category: cloud computing
                      service: compute
                      module: cyborg
                      history:
                      - time: '2025-02-15T08:44:36+00:00'
                        status: ng
                        error:
                          type: service down
                          reason: 1 node down
                          nodes:
                          - example-data-center
                          description: nova has 1 node down due to the memory exhausted,
                            and the abnormal memory competition from PID(24887) is
                            detected
                          details: "{ ... the best efforts of error summary / direction
                            ...} "
                          log: http://{dataCenter}:8888/log/nova/example-data-center-20250205113459-b3gc.log
                      - time: '2025-02-15T08:49:36+00:00'
                        status: ok
                      - time: '2025-02-15T08:54:36+00:00'
                        status: ok
                      - time: '2025-02-15T08:59:36+00:00'
                        status: ok
                      - time: '2025-02-15T09:04:36+00:00'
                        status: ok
                      - time: '2025-02-15T09:09:36+00:00'
                        status: ng
                        error:
                          type: service down
                          reason: 1 node down
                          nodes:
                          - example-data-center
                          description: nova has 1 node down due to the memory exhausted,
                            and the abnormal memory competition from PID(24887) is
                            detected
                          details: "{ ... the best efforts of error summary / direction
                            ...} "
                          log: http://{dataCenter}:8888/log/nova/example-data-center-20250205113459-b3gc.log
                      - time: '2025-02-15T09:14:36+00:00'
                        status: ok
                      - time: '2025-02-15T09:19:36+00:00'
                        status: ok
                      - time: '2025-02-15T09:24:36+00:00'
                        status: ok
                      - time: '2025-02-15T09:29:36+00:00'
                        status: ok
                      - time: '2025-02-15T09:34:36+00:00'
                        status: ng
                        error:
                          type: service down
                          reason: 1 node down
                          nodes:
                          - example-data-center
                          description: nova has 1 node down due to the memory exhausted,
                            and the abnormal memory competition from PID(24887) is
                            detected
                          details: "{ ... the best efforts of error summary / direction
                            ...} "
                          log: http://{dataCenter}:8888/log/nova/example-data-center-20250205113459-b3gc.log
                      - time: '2025-02-15T09:39:36+00:00'
                        status: ok
                      - time: '2025-02-15T09:44:36+00:00'
                        status: ok
                    msg: fetch health successfully
                    status: ok
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 400
                  msg:
                    type: string
                    example: 'invalid serviceType: example-service'
                  status:
                    type: string
                    example: bad request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch health checks: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/healths/services/{serviceType}/modules/{moduleType}":
    get:
      operationId: getHealthHistory
      tags:
      - Health
      summary: Retrieve the health history of module
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: path
        name: serviceType
        required: true
        schema:
          type: string
          enum:
          - clusterLink
          - clusterSys
          - clusterSettings
          - haCluster
          - msgQueue
          - iaasDb
          - virtualIp
          - storage
          - apiService
          - singleSignOn
          - network
          - compute
          - bareMetal
          - image
          - blockStor
          - fileStor
          - objectStor
          - orchestration
          - lbaas
          - dnsaas
          - k8saas
          - instanceHa
          - businessLogic
          - dataPipe
          - metrics
          - logAnalytics
          - notifications
        description: The name of the service to retrieve health history. use GET /api/v1/datacenters/{dataCenter}/services
          to get the service list and their modules.
      - in: path
        name: moduleType
        required: true
        schema:
          type: string
          enum:
          - link
          - clock
          - dns
          - bootstrap
          - license
          - etcd
          - nodelist
          - hacluster
          - rabbitmq
          - mysql
          - mongodb
          - vip
          - haproxy_ha
          - ceph
          - ceph_mon
          - ceph_osd
          - ceph_rgw
          - ceph_mds
          - ceph_mgr
          - rbd_target
          - haproxy
          - httpd
          - skyline
          - lim
          - memcache
          - k3s
          - keycloak
          - neutron
          - nova
          - cyborg
          - ironic
          - glance
          - cinder
          - manila
          - swift
          - heat
          - octavia
          - designate
          - rancher
          - masakari
          - zookeeper
          - kafka
          - monasca
          - telegraf
          - grafana
          - filebeat
          - auditbeat
          - logstash
          - opensearch
          - opensearch-dashboards
          - influxdb
          - kapacitor
        description: The name of the module to retrieve health history. use GET /api/v1/datacenters/{dataCenter}/services/{serviceType}
          to get the module list.
      - in: query
        name: past
        required: false
        schema:
          type: string
          enum:
          - 1h
          - 24h
          - 7d
          - 14d
          - 30d
        description: The past time of the health history to query, click 'try it out'
          to see a few options, but can specify with the 's'(second), 'm'(minute),
          'h'(hour), and 'd'(day) suffix for other time ranges.
        example: 1d
      - in: query
        name: start
        required: false
        schema:
          type: string
        description: The start time of the health history to query, the value should
          be in RFC3339 format (default is 24 hours ago).
        example: '2025-01-01T01:00:00+00:00'
      - in: query
        name: stop
        required: false
        schema:
          type: string
        description: The end time of the health history to query, the value should
          be in RFC3339 format (default is now).
        example: '2025-01-01T01:00:00+00:00'
      - "$ref": "#/components/parameters/watch"
      responses:
        '200':
          description: Retrieve the health history of module successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetModuleHealthHistoryResponse"
              examples:
                example1:
                  summary: Health history of module
                  value:
                    code: 200
                    data:
                      category: cloud computing
                      name: compute
                      module: nova
                      history:
                      - time: '2025-02-01T03:00:00+00:00'
                        status: ok
                      - time: '2025-02-01T02:55:00+00:00'
                        status: ok
                      - time: '2025-02-01T02:50:00+00:00'
                        status: ng
                        error:
                          type: service down
                          reason: 1 node down
                          nodes:
                          - example-node-0
                          description: nova has 1 node down due to the memory exhausted,
                            and the abnormal memory competition from PID(24887) is
                            detected
                          details: "{ ... best effort error summary / direction ...}"
                          log: http://datacenter1:8888/log/nova/example-data-center-20250205113459-b3gc.log
                      - time: '2025-02-01T02:45:00+00:00'
                        status: ok
                    msg: retrieve health history of module successfully
                    status: ok
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 400
                  msg:
                    type: string
                    example: 'invalid serviceType: example-service'
                  status:
                    type: string
                    example: bad request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: failed to retrieve health history
                  status:
                    type: string
                    example: internal server error
    patch:
      operationId: repairModuleHealth
      tags:
      - Health
      summary: Repair the unhealthy module
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: path
        name: serviceType
        required: true
        schema:
          type: string
          enum:
          - clusterLink
          - clusterSys
          - clusterSettings
          - haCluster
          - msgQueue
          - iaasDb
          - virtualIp
          - storage
          - apiService
          - singleSignOn
          - network
          - compute
          - bareMetal
          - image
          - blockStor
          - fileStor
          - objectStor
          - orchestration
          - lbaas
          - dnsaas
          - k8saas
          - instanceHa
          - businessLogic
          - dataPipe
          - metrics
          - logAnalytics
          - notifications
        description: The name of the service which cover the module you tend to repair.
          use GET /api/v1/datacenters/{dataCenter}/services to get the service list
          and their modules.
      - in: path
        name: moduleType
        required: true
        schema:
          type: string
          enum:
          - link
          - clock
          - dns
          - bootstrap
          - license
          - etcd
          - nodelist
          - hacluster
          - rabbitmq
          - mysql
          - mongodb
          - vip
          - haproxy_ha
          - ceph
          - ceph_mon
          - ceph_osd
          - ceph_rgw
          - ceph_mds
          - ceph_mgr
          - rbd_target
          - haproxy
          - httpd
          - skyline
          - lim
          - memcache
          - k3s
          - keycloak
          - neutron
          - nova
          - cyborg
          - ironic
          - glance
          - cinder
          - manila
          - swift
          - heat
          - octavia
          - designate
          - rancher
          - masakari
          - zookeeper
          - kafka
          - monasca
          - telegraf
          - grafana
          - filebeat
          - auditbeat
          - logstash
          - opensearch
          - opensearch-dashboards
          - influxdb
          - kapacitor
        description: The name of the module to repair. use GET /api/v1/datacenters/{dataCenter}/services/{serviceType}
          to get the module list.
      responses:
        '202':
          description: The Request of the unhealthy module repair is accepted
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PatchModuleRepairResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 400
                  msg:
                    type: string
                    example: 'invalid serviceType: example-service'
                  status:
                    type: string
                    example: bad request
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 409
                  msg:
                    type: string
                    example: the repair process is already running
                  status:
                    type: string
                    example: conflict
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch health checks: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/integrations":
    get:
      operationId: getIntegrations
      tags:
      - Integrations
      summary: Retrieve the list of integrated applications
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      responses:
        '200':
          description: Retrieve the list of integrated applications successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetIntegrationsResponse"
              examples:
                example1:
                  summary: Integrated applications
                  value:
                    code: 200
                    data:
                    - name: keycloak
                      isHeaderShortcutEnabled: true
                      description: Keycloak Dashboard
                      isBuiltIn: true
                      url: https://example-datat-center.host:10443/auth/admin
                    - name: openstack
                      isHeaderShortcutEnabled: true
                      description: OpenStack Dashboard
                      isBuiltIn: true
                      url: https://example-datat-center.host/horizon
                    - name: rancher
                      isHeaderShortcutEnabled: true
                      description: Rancher Dashboard
                      isBuiltIn: true
                      url: https://example-datat-center.host:10443
                    - name: ceph
                      isHeaderShortcutEnabled: true
                      description: Ceph Dashboard
                      isBuiltIn: true
                      url: https://example-datat-center.host:7443/ceph/#/dashboard
                    msg: fetch integrations successfully
                    status: ok
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch integrations: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/licenses":
    get:
      operationId: getLicenses
      tags:
      - Licenses
      summary: Retrieve the list of licenses
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: query
        name: pageNum
        required: false
        schema:
          type: integer
        description: The page number of the event chunking to fetch (default is 1).
        example: 1
      - in: query
        name: pageSize
        required: false
        schema:
          type: integer
        description: The size per page of the events to return (default is unlimit).
        example: 10
      responses:
        '200':
          description: Retrieve the list of licenses successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetLicensesResponse"
              examples:
                example1:
                  summary: Licenses
                  value:
                    code: 200
                    data:
                      licenses:
                      - type: trial
                        hostname: dell200
                        serial: "  "
                        product:
                          name: ''
                          features: 
                        issue:
                          by: Bigstack co., ltd.
                          to: "*"
                          hardware: "*"
                          date: '2025-02-04T17:54:45+08:00'
                        quantity:
                          type: ''
                          vcpu: 0
                        serviceLevelAgreement:
                          uptime: 0
                          period: ''
                          meanTimeBetweenFailure: ''
                          meanTimeToRecovery: ''
                        expiry:
                          date: '2025-04-05T17:54:45+08:00'
                          days: 58
                      page:
                        total: 1
                        number: 1
                        size: 1
                    msg: fetch licenses successfully
                    status: ok
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch licenses: internal server error'
                  status:
                    type: string
                    example: internal server error
    post:
      operationId: importClusterLicense
      tags:
      - Licenses
      summary: Update licenses for the cluster
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: path
        name: node
        required: true
        schema:
          type: string
        description: The name of the node to operate
        example: example-node
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PostLicenseRequest"
      responses:
        '200':
          description: Update licenses successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PostLicenseResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to update licenses: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/nodes/{node}/licenses":
    post:
      operationId: importNodeLicense
      tags:
      - Licenses
      summary: Update licenses for specific node
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: path
        name: node
        required: true
        schema:
          type: string
        description: The name of the node to operate
        example: example-node
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PostLicenseRequest"
      responses:
        '200':
          description: Update licenses successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PostLicenseResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to update licenses: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/metrics":
    get:
      operationId: getMetricsOverview
      tags:
      - Metrics
      summary: Retrieve the metrics of data center
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - "$ref": "#/components/parameters/watch"
      responses:
        '200':
          description: Retrieve the summary of data center successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetMetricsResponse"
              examples:
                example1:
                  summary: Overview of data center metrics
                  value:
                    code: 200
                    data:
                      dataCenter:
                        usage:
                          cpu:
                            totalCores: 96
                            usedCores: 5.3846
                            usedPercent: 6.6012
                            freeCores: 90.6152
                            freePercent: 93.3986
                          memory:
                            totalMiB: 515645.789
                            usedMiB: 269875.7773
                            usedPercent: 52.3374
                            freeMiB: 245770.0117
                            freePercent: 47.6625
                      host:
                        role:
                          controlConverged:
                            count: 2
                            cpu:
                              totalCores: 96
                              usedCores: 5.3846
                              usedPercent: 6.6012
                              freeCores: 90.6152
                              freePercent: 93.3986
                            memory:
                              totalMiB: 515645.789
                              usedMiB: 269875.7773
                              usedPercent: 52.3374
                              freeMiB: 245770.0117
                              freePercent: 47.6625
                          control:
                            count: 0
                            cpu:
                              totalCores: 0
                              usedCores: 0
                              usedPercent: 0
                              freeCores: 0
                              freePercent: 0
                            memory:
                              totalMiB: 0
                              usedMiB: 0
                              usedPercent: 0
                              freeMiB: 0
                              freePercent: 0
                          compute:
                            count: 0
                            cpu:
                              totalCores: 0
                              usedCores: 0
                              usedPercent: 0
                              freeCores: 0
                              freePercent: 0
                            memory:
                              totalMiB: 0
                              usedMiB: 0
                              usedPercent: 0
                              freeMiB: 0
                              freePercent: 0
                          storage:
                            count: 0
                            cpu:
                              totalCores: 0
                              usedCores: 0
                              usedPercent: 0
                              freeCores: 0
                              freePercent: 0
                            memory:
                              totalMiB: 0
                              usedMiB: 0
                              usedPercent: 0
                              freeMiB: 0
                              freePercent: 0
                          edgeCore:
                            count: 0
                            cpu:
                              totalCores: 0
                              usedCores: 0
                              usedPercent: 0
                              freeCores: 0
                              freePercent: 0
                            memory:
                              totalMiB: 0
                              usedMiB: 0
                              usedPercent: 0
                              freeMiB: 0
                              freePercent: 0
                          moderator:
                            count: 0
                            cpu:
                              totalCores: 0
                              usedCores: 0
                              usedPercent: 0
                              freeCores: 0
                              freePercent: 0
                            memory:
                              totalMiB: 0
                              usedMiB: 0
                              usedPercent: 0
                              freeMiB: 0
                              freePercent: 0
                        usages:
                        - role: control-converged
                          name: example-node-0
                          address: 10.10.10.10
                          cpu:
                            totalCores: 48
                            usedCores: 2.7194
                            usedPercent: 5.3006
                            freeCores: 45.2805
                            freePercent: 94.6993
                          memory:
                            totalMiB: 257822.8945
                            usedMiB: 134933.4531
                            usedPercent: 52.3357
                            freeMiB: 122889.4414
                            freePercent: 47.6642
                        - role: control-converged
                          name: example-node-1
                          address: 10.10.10.11
                          cpu:
                            totalCores: 48
                            usedCores: 2.6652
                            usedPercent: 7.9019
                            freeCores: 45.3347
                            freePercent: 92.098
                          memory:
                            totalMiB: 257822.8945
                            usedMiB: 134942.3242
                            usedPercent: 52.3391
                            freeMiB: 122880.5703
                            freePercent: 47.6608
                      vm:
                        status:
                          total: 15
                          running: 15
                          stopped: 0
                          suspend: 0
                          paused: 0
                          error: 0
                        usage:
                          vcpu:
                            totalCores: 48
                            usedCores: 40
                            usedPercent: 0.8333
                            freeCores: 8
                            freePercent: 0.1666
                          memory:
                            totalMiB: 257822
                            usedMiB: 100520
                            usedPercent: 0.3898
                            freeMiB: 157302
                            freePercent: 0.6101
                          storage:
                            totalMiB: 12571648
                            usedMiB: 1126400
                            usedPercent: 0.0895
                            freeMiB: 11445248
                            freePercent: 0.9104
                    msg: fetch summary successfully
                    status: ok
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch nodes: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/metrics/{metricType}/{viewType}/{entityType}":
    get:
      operationId: getMetricByTypes
      tags:
      - Metrics
      summary: Retrieve the various metrics with different view from hosts or vms
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: path
        name: metricType
        required: true
        schema:
          type: string
          enum:
          - cpuUsage
          - memoryUsage
          - diskUsage
          - diskBandwidth
          - diskIops
          - diskLatency
          - diskReadIops
          - diskWriteIops
          - networkTrafficIn
          - networkTrafficOut
        description: The type of metric to query, the value can be 'cpuUsage', 'memoryUsage',
          'diskUsage', 'diskBandwidth', 'diskIops', 'diskLatency', 'diskReadIops',
          'diskWriteIops', 'networkTrafficIn', or 'networkTrafficOut'.
        example: 1
      - in: path
        name: viewType
        required: true
        schema:
          type: string
          enum:
          - summary
          - history
          - rank
        description: The type of view to query, the value can be only 'summary', 'history',
          or 'rank'.
        example: 1
      - in: path
        name: entityType
        required: true
        schema:
          type: string
          enum:
          - hosts
          - vms
        description: The type of entity to query, the value can be 'hosts' or 'vms'
        example: hosts
      - in: query
        name: start
        required: false
        schema:
          type: string
        description: The start time of the event to query, the value should be in
          RFC3339 format (default is 24 hours ago).
        example: '2025-01-01T01:00:00+00:00'
      - in: query
        name: stop
        required: false
        schema:
          type: string
        description: The end time of the event to query, the value should be in RFC3339
          format (default is now).
        example: '2025-01-01T01:00:00+00:00'
      responses:
        '200':
          description: Retrieve the summary of data center successfully
          content:
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/GetCpuUsageSummaryOfHostsResponse"
                - "$ref": "#/components/schemas/GetCpuUsageRankOfHostsResponse"
                - "$ref": "#/components/schemas/GetMemoryUsageSummaryOfHostsResponse"
                - "$ref": "#/components/schemas/GetMemoryUsageRankOfHostsResponse"
                - "$ref": "#/components/schemas/GetDiskUsageRankOfHostsResponse"
                - "$ref": "#/components/schemas/GetDiskBandwidthHistoryOfHostsResponse"
                - "$ref": "#/components/schemas/GetDiskIopsHistoryOfHostsResponse"
                - "$ref": "#/components/schemas/GetDiskLatencyHistoryOfHostsResponse"
                - "$ref": "#/components/schemas/GetNetworkTrafficInRankOfHostsResponse"
                - "$ref": "#/components/schemas/GetNetworkTrafficOutRankOfHostsResponse"
                - "$ref": "#/components/schemas/GetCpuUsageRankOfVmsResponse"
                - "$ref": "#/components/schemas/GetMemoryUsageSummaryOfVmsResponse"
                - "$ref": "#/components/schemas/GetMemoryUsageRankOfVmsResponse"
                - "$ref": "#/components/schemas/GetDiskReadIopsRankOfVmsResponse"
                - "$ref": "#/components/schemas/GetDiskWriteIopsRankOfVmsResponse"
                - "$ref": "#/components/schemas/GetNetworkTrafficInRankOfVmsResponse"
                - "$ref": "#/components/schemas/GetNetworkTrafficOutRankOfVmsResponse"
              examples:
                example1:
                  summary: Cpu usage summary of hosts
                  value:
                    code: 200
                    data:
                      totalCores: 48
                      usedCores: 4.7778
                      usedPercent: 6.6988
                      freeCores: 43.2221
                      freePercent: 93.3011
                    msg: fetch metrics successfully
                    status: ok
                example2:
                  summary: Cpu usage rank of hosts
                  value:
                    code: 200
                    data:
                      unit: percentage
                      rank:
                      - id: example-node-0
                        name: example-node-0
                        value: 12.1752
                        history:
                        - time: '2025-02-14T00:19:00+00:00'
                          value: 10.3202
                        - time: '2025-02-14T00:20:00+00:00'
                          value: 10.1465
                        - time: '2025-02-14T00:21:00+00:00'
                          value: 14.5854
                        - time: '2025-02-14T00:22:00+00:00'
                          value: 11.9773
                      - id: example-node-1
                        name: example-node-1
                        value: 8.8248
                        history:
                        - time: '2025-02-14T00:19:00+00:00'
                          value: 9.3202
                        - time: '2025-02-14T00:20:00+00:00'
                          value: 9.1465
                        - time: '2025-02-14T00:21:00+00:00'
                          value: 7.5854
                        - time: '2025-02-14T00:22:00+00:00'
                          value: 6.9773
                    msg: fetch metrics successfully
                    status: ok
                example3:
                  summary: Memory usage summary of hosts
                  value:
                    code: 200
                    data:
                      totalMiB: 257371
                      usedMiB: 98255
                      value: 38.1752
                      freeMiB: 159116
                      freePercent: 61.8248
                    msg: fetch metrics successfully
                    status: ok
                example4:
                  summary: Memory usage rank of hosts
                  value:
                    code: 200
                    data:
                      unit: percentage
                      rank:
                      - id: example-node-0
                        name: example-node-0
                        value: 56.4807
                        history:
                        - time: '2025-02-14T00:23:00+00:00'
                          value: 56.4997
                        - time: '2025-02-14T00:24:00+00:00'
                          value: 56.4998
                        - time: '2025-02-14T00:25:00+00:00'
                          value: 56.4963
                        - time: '2025-02-14T00:26:00+00:00'
                          value: 56.4758
                      - id: example-node-1
                        name: example-node-1
                        value: 37.1752
                        history:
                        - time: '2025-02-14T00:23:00+00:00'
                          value: 36.4997
                        - time: '2025-02-14T00:24:00+00:00'
                          value: 36.4998
                        - time: '2025-02-14T00:25:00+00:00'
                          value: 36.4963
                        - time: '2025-02-14T00:26:00+00:00'
                          value: 36.4758
                    msg: fetch metrics successfully
                    status: ok
                example5:
                  summary: Disk usage rank of hosts
                  value:
                    code: 200
                    data:
                      unit: percentage
                      rank:
                      - id: example-node-0
                        name: example-node-0
                        value: 25.3645
                        history:
                        - time: '2025-02-14T00:26:00+00:00'
                          value: 25.7166
                        - time: '2025-02-14T00:27:00+00:00'
                          value: 25.7188
                        - time: '2025-02-14T00:28:00+00:00'
                          value: 25.7209
                        - time: '2025-02-14T00:29:00+00:00'
                          value: 25.7243
                      - id: example-node-1
                        name: example-node-1
                        value: 15.3645
                        history:
                        - time: '2025-02-14T00:26:00+00:00'
                          value: 15.7166
                        - time: '2025-02-14T00:27:00+00:00'
                          value: 15.7188
                        - time: '2025-02-14T00:28:00+00:00'
                          value: 15.7209
                        - time: '2025-02-14T00:29:00+00:00'
                          value: 15.7243
                    msg: fetch metrics successfully
                    status: ok
                example6:
                  summary: Disk bandwidth history of hosts
                  value:
                    code: 200
                    data:
                      unit: bytes
                      read:
                      - time: '2025-02-08T22:58:00+00:00'
                        value: 0.7333
                      - time: '2025-02-08T22:59:00+00:00'
                        value: 0
                      - time: '2025-02-08T23:00:00+00:00'
                        value: 955.7333
                      - time: '2025-02-08T23:01:00+00:00'
                        value: 0
                      - time: '2025-02-08T23:02:00+00:00'
                        value: 1434
                      write:
                      - time: '2025-02-08T22:51:00+00:00'
                        value: 81578.6666
                      - time: '2025-02-08T22:52:00+00:00'
                        value: 87929.15
                      - time: '2025-02-08T22:53:00+00:00'
                        value: 110865.0666
                      - time: '2025-02-08T22:54:00+00:00'
                        value: 110796.8
                      - time: '2025-02-08T22:55:00+00:00'
                        value: 110933.3333
                    msg: fetch metrics successfully
                    status: ok
                example7:
                  summary: Disk iops history of hosts
                  value:
                    code: 200
                    data:
                      unit: ops
                      read:
                      - time: '2025-02-08T22:55:00+00:00'
                        value: 1.05
                      - time: '2025-02-08T22:56:00+00:00'
                        value: 1.0833
                      - time: '2025-02-08T22:57:00+00:00'
                        value: 1
                      - time: '2025-02-08T22:58:00+00:00'
                        value: 1.0166
                      - time: '2025-02-08T22:59:00+00:00'
                        value: 1
                      write:
                      - time: '2025-02-08T22:55:00+00:00'
                        value: 6.8333
                      - time: '2025-02-08T22:56:00+00:00'
                        value: 7.8833
                      - time: '2025-02-08T22:57:00+00:00'
                        value: 6.85
                      - time: '2025-02-08T22:58:00+00:00'
                        value: 4.9333
                      - time: '2025-02-08T22:59:00+00:00'
                        value: 6.2166
                    msg: fetch metrics successfully
                    status: ok
                example8:
                  summary: Disk latency history of hosts
                  value:
                    code: 200
                    data:
                      unit: millisecond
                      read:
                      - time: '2025-02-08T22:58:00+00:00'
                        value: 4999.5
                      - time: '2025-02-08T22:59:00+00:00'
                        value: 21365.5666
                      - time: '2025-02-08T23:00:00+00:00'
                        value: 39951.6333
                      - time: '2025-02-08T23:01:00+00:00'
                        value: 6255.1333
                      - time: '2025-02-08T23:02:00+00:00'
                        value: 5838730.85
                      write:
                      - time: '2025-02-08T22:58:00+00:00'
                        value: 12624417.95
                      - time: '2025-02-08T22:59:00+00:00'
                        value: 29347351.6333
                      - time: '2025-02-08T23:00:00+00:00'
                        value: 5219905.3
                      - time: '2025-02-08T23:01:00+00:00'
                        value: 9249751.6666
                      - time: '2025-02-08T23:02:00+00:00'
                        value: 10661656.35
                    msg: fetch metrics successfully
                    status: ok
                example9:
                  summary: Network inbound traffic rank of hosts
                  value:
                    code: 200
                    data:
                      unit: packets
                      rank:
                      - id: example-node-0
                        name: example-node-0
                        value: 7466.5592
                        history:
                        - time: '2025-02-14T00:32:00+00:00'
                          value: 50064.9333
                        - time: '2025-02-14T00:33:00+00:00'
                          value: 7141170.1333
                        - time: '2025-02-14T00:34:00+00:00'
                          value: 39644.1333
                        - time: '2025-02-14T00:35:00+00:00'
                          value: 45140
                      - id: example-node-1
                        name: example-node-1
                        value: 1126.5592
                        history:
                        - time: '2025-02-14T00:32:00+00:00'
                          value: 1467.9333
                        - time: '2025-02-14T00:33:00+00:00'
                          value: 1321.1333
                        - time: '2025-02-14T00:34:00+00:00'
                          value: 1211.1333
                        - time: '2025-02-14T00:35:00+00:00'
                          value: 1131.5145
                    msg: fetch metrics successfully
                    status: ok
                example10:
                  summary: Network outbound traffic rank of hosts
                  value:
                    code: 200
                    data:
                      unit: packets
                      rank:
                      - id: example-node-0
                        name: example-node-0
                        value: 3595.9166
                        history:
                        - time: '2025-02-14T00:35:00+00:00'
                          value: 13138
                        - time: '2025-02-14T00:36:00+00:00'
                          value: 41106.6666
                        - time: '2025-02-14T00:37:00+00:00'
                          value: 149872.1333
                        - time: '2025-02-14T00:38:00+00:00'
                          value: 12152.6666
                      - id: example-node-1
                        name: example-node-1
                        value: 1595.9166
                        history:
                        - time: '2025-02-14T00:35:00+00:00'
                          value: 3138
                        - time: '2025-02-14T00:36:00+00:00'
                          value: 11106.6666
                        - time: '2025-02-14T00:37:00+00:00'
                          value: 149872.1333
                        - time: '2025-02-14T00:38:00+00:00'
                          value: 12152.6666
                    msg: fetch metrics successfully
                    status: ok
                example11:
                  summary: Cpu usage rank of vms
                  value:
                    code: 200
                    data:
                      unit: percentage
                      rank:
                      - id: example-vm-0
                        name: example-vm-0
                        value: 22
                        history:
                        - time: '2025-02-14T00:34:52+00:00'
                          value: 21
                        - time: '2025-02-14T00:35:22+00:00'
                          value: 23
                        - time: '2025-02-14T00:35:52+00:00'
                          value: 20
                        - time: '2025-02-14T00:36:22+00:00'
                          value: 22
                      - id: example-vm-1
                        name: example-vm-1
                        value: 16
                        history:
                        - time: '2025-02-14T00:34:52+00:00'
                          value: 20
                        - time: '2025-02-14T00:35:22+00:00'
                          value: 18
                        - time: '2025-02-14T00:35:52+00:00'
                          value: 20
                        - time: '2025-02-14T00:36:23+00:00'
                          value: 18
                    msg: fetch metrics successfully
                    status: ok
                example12:
                  summary: Memory usage summary of vms
                  value:
                    code: 200
                    data:
                      totalMiB: 257371
                      usedMiB: 98255
                      value: 38.1752
                      freeMiB: 159116
                      freePercent: 61.8248
                    msg: fetch metrics successfully
                    status: ok
                example13:
                  summary: Memory usage rank of vms
                  value:
                    code: 200
                    data:
                      unit: percentage
                      rank:
                      - id: example-vm-0
                        name: example-vm-0
                        value: 60.6915
                        history:
                        - time: '2025-02-14T00:35:52+00:00'
                          value: 61.6362
                        - time: '2025-02-14T00:36:23+00:00'
                          value: 61.4931
                        - time: '2025-02-14T00:36:53+00:00'
                          value: 60.9485
                        - time: '2025-02-14T00:37:23+00:00'
                          value: 60.3947
                      - id: example-vm-1
                        name: example-vm-1
                        value: 36.6008
                        history:
                        - time: '2025-02-14T00:35:53+00:00'
                          value: 36.6073
                        - time: '2025-02-14T00:36:23+00:00'
                          value: 36.6105
                        - time: '2025-02-14T00:36:53+00:00'
                          value: 36.6105
                        - time: '2025-02-14T00:37:23+00:00'
                          value: 36.6101
                    msg: fetch metrics successfully
                    status: ok
                example14:
                  summary: Disk read iops rank of vms
                  value:
                    code: 200
                    data:
                      unit: ops
                      rank:
                      - id: 9d56d601-85f0-4bfe-992d-ba72ab174552
                        name: example-vm-0
                        device: sda
                        value: 1640.3
                        history:
                        - time: '2025-02-14T00:38:53+00:00'
                          value: 1345.3
                        - time: '2025-02-14T00:39:23+00:00'
                          value: 1123.3
                        - time: '2025-02-14T00:39:53+00:00'
                          value: 1345.3
                      - id: 301c55e3-5133-4c2c-9dda-4c31c382918d
                        name: example-vm-1
                        device: sdc
                        value: 235.35
                        history:
                        - time: '2025-02-14T00:38:53+00:00'
                          value: 124.3
                        - time: '2025-02-14T00:39:23+00:00'
                          value: 214.3
                        - time: '2025-02-14T00:39:53+00:00'
                          value: 324.3
                    msg: fetch metrics successfully
                    status: ok
                example15:
                  summary: Disk write iops rank of vms
                  value:
                    code: 200
                    data:
                      unit: ops
                      rank:
                      - id: 9d56d601-85f0-4bfe-992d-ba72ab174552
                        name: example-vm-0
                        device: sda
                        value: 184158.3022
                        history:
                        - time: '2025-02-14T00:43:53+00:00'
                          value: 182514.0885
                        - time: '2025-02-14T00:44:23+00:00'
                          value: 165440.9962
                        - time: '2025-02-14T00:44:53+00:00'
                          value: 784010.6095
                      - id: 301c55e3-5133-4c2c-9dda-4c31c382918d
                        name: example-vm-1
                        device: sdc
                        value: 39589.3872
                        history:
                        - time: '2025-02-14T00:43:53+00:00'
                          value: 46107.319
                        - time: '2025-02-14T00:44:23+00:00'
                          value: 45280.7243
                        - time: '2025-02-14T00:44:53+00:00'
                          value: 42949.9957
                    msg: fetch metrics successfully
                    status: ok
                example16:
                  summary: Network inbound traffic rank of vms
                  value:
                    code: 200
                    data:
                      unit: packets
                      rank:
                      - id: 9d56d601-85f0-4bfe-992d-ba72ab174552
                        name: example-vm-0
                        device: tap8c5cff7e-b9
                        value: 49756.9502
                        history:
                        - time: '2025-02-14T00:45:53+00:00'
                          value: 370067.1842
                        - time: '2025-02-14T00:46:23+00:00'
                          value: 409181.4363
                        - time: '2025-02-14T00:46:53+00:00'
                          value: 711269.641
                        - time: '2025-02-14T00:47:23+00:00'
                          value: 398196.6271
                      - id: 301c55e3-5133-4c2c-9dda-4c31c382918d
                        name: example-vm-1
                        device: tapdf5be3d9-c6
                        value: 25784.0787
                        history:
                        - time: '2025-02-14T00:45:53+00:00'
                          value: 184756.5743
                        - time: '2025-02-14T00:46:23+00:00'
                          value: 207790.9312
                        - time: '2025-02-14T00:46:53+00:00'
                          value: 270692.8834
                        - time: '2025-02-14T00:47:23+00:00'
                          value: 200824.0072
                    msg: fetch metrics successfully
                    status: ok
                example17:
                  summary: Network outbound traffic rank of vms
                  value:
                    code: 200
                    data:
                      unit: packets
                      rank:
                      - id: 9d56d601-85f0-4bfe-992d-ba72ab174552
                        name: example-vm-0
                        device: tap8c5cff7e-b9
                        value: 54213.0697
                        history:
                        - time: '2025-02-14T00:46:53+00:00'
                          value: 1027891.3544
                        - time: '2025-02-14T00:47:23+00:00'
                          value: 462342.2831
                        - time: '2025-02-14T00:47:53+00:00'
                          value: 435980.7214
                        - time: '2025-02-14T00:48:23+00:00'
                          value: 447617.6397
                      - id: 301c55e3-5133-4c2c-9dda-4c31c382918d
                        name: example-vm-1
                        device: tapdf5be3d9-c6
                        value: 13561.1536
                        history:
                        - time: '2025-02-14T00:46:53+00:00'
                          value: 128726.0911
                        - time: '2025-02-14T00:47:23+00:00'
                          value: 109373.8789
                        - time: '2025-02-14T00:47:53+00:00'
                          value: 109977.441
                        - time: '2025-02-14T00:48:23+00:00'
                          value: 111826.9696
                    msg: fetch metrics successfully
                    status: ok
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 400
                  msg:
                    type: string
                    example: metricType should be cpuUsage, memoryUsage, diskUsage,
                      diskBandwidth, diskIops, diskLatency, diskReadIops, diskWriteIops,
                      networkTrafficIn, or networkTrafficOut
                  status:
                    type: string
                    example: bad request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch nodes: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/nodes":
    get:
      operationId: getNodes
      tags:
      - Nodes
      summary: Retrieve the list of nodes
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: query
        name: pageNum
        required: false
        schema:
          type: integer
        description: The page number of the event chunking to fetch (default is 1).
        example: 1
      - in: query
        name: pageSize
        required: false
        schema:
          type: integer
        description: The size per page of the events to return (default is unlimit).
        example: 10
      - "$ref": "#/components/parameters/watch"
      responses:
        '200':
          description: Retrieve the list of nodes successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetNodesResponse"
              examples:
                example:
                  summary: Nodes
                  value:
                    code: 200
                    data:
                      nodes:
                      - id: abc0005e
                        hostname: example-node
                        role: control-converged
                        address: 10.10.10.10:8001
                        managementIP: 10.10.10.10
                        license:
                          type: trial
                          hostname: example-node
                          serial: 1H2ZLG2
                          product:
                            name: ''
                            features: 
                          issue:
                            by: Bigstack co., ltd.
                            to: bigstack
                            hardware: "*"
                            date: '2025-02-04T17:54:45+08:00'
                          quantity:
                            type: ''
                            vcpu: 0
                          serviceLevelAgreement:
                            uptime: 0
                            period: ''
                            meanTimeBetweenFailure: ''
                            meanTimeToRecovery: ''
                          expiry:
                            date: '2025-04-05T17:54:45+08:00'
                            days: 44
                        status: up
                        vcpu:
                          totalCores: 48
                          usedCores: 38
                          usedPercent: 79.1666
                          freeCores: 10
                          freePercent: 20.8333
                        memory:
                          totalMiB: 257822
                          usedMiB: 95400
                          usedPercent: 37.0022
                          freeMiB: 162422
                          freePercent: 62.9977
                        storage:
                          totalMiB: 12571648
                          usedMiB: 716800
                          usedPercent: 5.7017
                          freeMiB: 11854848
                          freePercent: 94.2982
                        uptimeSeconds: 5734686.37
                        labels:
                          isGpuEnabled: 'false'
                      page:
                        total: 1
                        number: 1
                        size: 1
                    msg: fetch nodes list successfully
                    status: ok
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch nodes: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/settings":
    get:
      operationId: getSettings
      tags:
      - Settings
      summary: Retrieve setting
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      responses:
        '200':
          description: Setting retrieved successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetSettingResponse"
              examples:
                example:
                  summary: Setting list
                  value:
                    code: 200
                    data:
                      titlePrefix: example title prefix
                      email:
                        recipients:
                        - email: example.user.1@example.com
                          note: example note 1
                          isTestable: true
                        - email: example.user.2@example.com
                          note: example note 2
                          isTestable: true
                        senders:
                        - host: email-smtp.example.mailserver.com
                          port: 587
                          username: ABBBBBBMJM56DCCCCJR
                          password: VBHWEEGEEEEEX0f5NLHDXLESxdZR
                          email: noreply@example.com
                          accessVerified: true
                      slack:
                        channels:
                        - name: "#example-alert-channel-1"
                          url: https://hooks.slack.com/services/T9LMBBBBB/B08GQABBBBB/BBBBBBBSevAyxkM2dPYBBBBB
                          description: example alert channel 1
                        - name: "#example-alert-channel-2"
                          url: https://hooks.slack.com/services/T9LMCCCCC/C08GQACCCCC/CCCCCCCSevAyxkM2dPYCCCCC
                          description: example alert channel 2
                    msg: all setting retrieved successfully
                    status: ok
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch setting: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/settings/titlePrefix":
    put:
      operationId: updateTitlePrefix
      tags:
      - Settings
      summary: Update title prefix
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TitlePrefix"
            examples:
              example:
                summary: Title prefix
                value:
                  value: example title prefix
      responses:
        '200':
          description: Title prefix updated successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UpdateTitlePrefixResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to update title prefix: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/settings/email/senders":
    post:
      operationId: createEmailSender
      tags:
      - Settings
      summary: Create an email sender
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmailSender"
            examples:
              example:
                summary: Email Sender
                value:
                  host: email-smtp.example.mailserver.com
                  port: 587
                  username: ABBBBBBMJM56DCCCCJR
                  password: VBHWEEGEEEEEX0f5NLHDXLESxdZR
                  email: noreply@example.com
      responses:
        '201':
          description: Email sender created successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PostEmailSenderResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch email sender: internal server error'
                  status:
                    type: string
                    example: internal server error
    get:
      operationId: getEmailSenders
      tags:
      - Settings
      summary: Retrieve email senders
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      responses:
        '200':
          description: Email senders retrieved successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetEmailSendersResponse"
              examples:
                example:
                  summary: Email Senders List
                  value:
                    code: 200
                    data:
                    - host: email-smtp.example.mailserver.com
                      port: 587
                      username: example-user
                      password: example-password
                      email: noreply@bigstack.co
                      accessVerified: true
                    msg: email senders retrieved successfully
                    status: ok
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch email sender: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/settings/email/senders/{senderHost}":
    post:
      operationId: tryEmailSender
      tags:
      - Settings
      summary: Try an email sender
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: path
        name: senderHost
        required: true
        schema:
          type: string
        description: The host of the email sender to operate
        example: email-smtp.example.mailserver.com
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TryEmailSender"
            examples:
              example:
                summary: Try Email Sender
                value:
                  email: example.user.1@example.com
      responses:
        '200':
          description: Email sender tried successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TryEmailSenderResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to try email sender: internal server error'
                  status:
                    type: string
                    example: internal server error
    put:
      operationId: updateEmailSender
      tags:
      - Settings
      summary: Update an email sender
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: path
        name: senderHost
        required: true
        schema:
          type: string
        description: The host of the email sender to operate
        example: email-smtp.example.mailserver.com
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmailSender"
            examples:
              example:
                summary: Email Sender
                value:
                  host: email-smtp.example.mailserver.com
                  port: 587
                  username: example-user
                  password: example-password
                  email: noreply@bigstack.co
      responses:
        '200':
          description: Email sender updated successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PutEmailSenderResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch email sender: internal server error'
                  status:
                    type: string
                    example: internal server error
    delete:
      operationId: deleteEmailSender
      tags:
      - Settings
      summary: Delete an email sender
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: path
        name: senderHost
        required: true
        schema:
          type: string
        description: The host of the email sender to operate
        example: email-smtp.example.mailserver.com
      responses:
        '200':
          description: Email sender deleted successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DeleteEmailSenderResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch email sender: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/settings/email/recipients":
    post:
      operationId: createEmailRecipient
      tags:
      - Settings
      summary: Create an email recipient
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmailRecipient"
            examples:
              example:
                summary: Email Recipient
                value:
                  email: example.user.1@example.com
                  note: example email recipient
      responses:
        '201':
          description: Email recipient created successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PostEmailRecipientResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to create email recipients: internal server error'
                  status:
                    type: string
                    example: internal server error
    get:
      operationId: getEmailRecipients
      tags:
      - Settings
      summary: Retrieve email recipients
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      responses:
        '200':
          description: Email recipients retrieved successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetEmailRecipientsResponse"
              examples:
                example:
                  summary: Email recipients list
                  value:
                    code: 200
                    data:
                    - email: example.user.1@example.com
                      note: example email recipient 1
                      isTestable: true
                    - email: example.user.2@example.com
                      note: example email recipient 2
                      isTestable: true
                    msg: email recipients retrieved successfully
                    status: ok
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to fetch email recipients: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/settings/email/recipients/{recipientEmail}":
    post:
      operationId: tryEmailRecipient
      tags:
      - Settings
      summary: Try an email recipient
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: path
        name: recipientEmail
        required: true
        schema:
          type: string
        description: recipient email to operate
      responses:
        '200':
          description: Email recipient tried successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TryEmailRecipientResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 400
                  msg:
                    type: string
                    example: recipient not found
                  status:
                    type: string
                    example: bad request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to try email recipient: internal server error'
                  status:
                    type: string
                    example: internal server error
    put:
      operationId: updateEmailRecipient
      tags:
      - Settings
      summary: Update an email recipient
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: path
        name: recipientEmail
        required: true
        schema:
          type: string
        description: recipient email to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmailRecipient"
            examples:
              example:
                summary: Email Recipient
                value:
                  email: example.user.1@example.com
                  note: Updated recipients
      responses:
        '200':
          description: Email recipient updated successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PutEmailRecipientResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to update email recipient: internal server error'
                  status:
                    type: string
                    example: internal server error
    delete:
      operationId: deleteEmailRecipient
      tags:
      - Settings
      summary: Delete an email recipient
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: path
        name: recipientEmail
        required: true
        schema:
          type: string
        description: recipient email to delete
      responses:
        '200':
          description: Email recipient deleted successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DeleteEmailRecipientResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to delete email recipient: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/settings/slack/channels":
    post:
      operationId: createSlackChannel
      tags:
      - Settings
      summary: Create a slack channel
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SlackChannel"
            examples:
              example:
                summary: Slack Channel
                value:
                  name: "#example-alert-channel-1"
                  url: https://hooks.slack.com/services/T9LMBBBBB/B08GQABBBBB/BBBBBBBSevAyxkM2dPYBBBBB
                  description: example alert channel 1
      responses:
        '201':
          description: Slack channel created successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PostSlackChannelResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to create slack channel: internal server error'
                  status:
                    type: string
                    example: internal server error
    get:
      operationId: getSlackChannels
      tags:
      - Settings
      summary: Retrieve slack channels
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      responses:
        '200':
          description: Slack channels retrieved successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetSlackChannelsResponse"
              examples:
                example:
                  summary: Slack channel List
                  value:
                    code: 200
                    data:
                      slackChannels:
                      - name: "#example-alert-channel-1"
                        url: https://hooks.slack.com/services/T9LMBBBBB/B08GQABBBBB/BBBBBBBSevAyxkM2dPYBBBBB
                        description: example alert channel 1
                      - name: "#example-alert-channel-2"
                        url: https://hooks.slack.com/services/T9LMCCCCC/C08GQACCCCC/CCCCCCCSevAyxkM2dPYCCCCC
                        description: example alert channel 2
                    msg: slack channels retrieved successfully
                    status: ok
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to update slack channel: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/settings/slack/channels/{channelName}":
    post:
      operationId: trySlackChannel
      tags:
      - Settings
      summary: Try a slack channel
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: path
        name: channelName
        required: true
        schema:
          type: string
        description: channel name to update
      responses:
        '200':
          description: Slack channel tried successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TrySlackChannelResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to try slack channel: internal server error'
                  status:
                    type: string
                    example: internal server error
    put:
      operationId: updateSlackChannel
      tags:
      - Settings
      summary: Update a slack channel
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: path
        name: channelName
        required: true
        schema:
          type: string
        description: channel name to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SlackChannel"
            examples:
              example:
                summary: Slack channel
                value:
                  name: "#example-alert-channel-1"
                  url: https://hooks.slack.com/services/T9LMBBBBB/B08GQABBBBB/BBBBBBBSevAyxkM2dPYBBBBB
                  description: example alert channel 1
      responses:
        '200':
          description: Slack channel updated successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PutSlackChannelResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to update slack channel: internal server error'
                  status:
                    type: string
                    example: internal server error
    delete:
      operationId: deleteSlackChannel
      tags:
      - Settings
      summary: Delete a slack channel
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: path
        name: channelName
        required: true
        schema:
          type: string
        description: channel name to delete
      responses:
        '200':
          description: Slack channel deleted successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DeleteSlackChannelResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to delete slack channel: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/tokens":
    post:
      operationId: getToken
      tags:
      - Tokens
      summary: Retrieve the time-limited token for the data center
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      requestBody:
        description: The user name and password to generate the token
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GetTokensRequest"
      responses:
        '200':
          description: Retrieve the time-limited token for the data center successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetTokensResponse"
              examples:
                example:
                  summary: Token
                  value:
                    code: 201
                    data:
                      token: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIwdDdGdWlJZC1lbnhVUWRZWGVZalZ6Q0pQZFRWMmxaU0NZanRkQW01S3djIn0.eyJleHAiOjE3Mzg5NjA2NzYsImlhdCI6MTczODk1MzQ3NiwianRpIjoiZjZjZTJlMjMtYzgwNC00N2YxLWE0OWEtZjdlNWZlYTgyYThjIiwiaXNzIjoiaHR0cHM6Ly8xMC4zMi4xMC4xODA6MTA0NDMvYXV0aC9yZWFsbXMvbWFzdGVyIiwiYXVkIjpbIm1hc3Rlci1yZWFsbSIsImFjY291bnQiXSwic3ViIjoiMDY1OTVlMDAtZWIzOS00YWUxLTkzYjctZDMyNzg1MDdiZTUzIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoidG9rZW4tY29ubmVjdCIsInNlc3Npb25fc3RhdGUiOiJlOTE0MWVhZC01MTQ1LTRjZmQtODhiZC00ZjYxYzI0MzA0NzAiLCJhY3IiOiIxIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbImNyZWF0ZS1yZWFsbSIsImRlZmF1bHQtcm9sZXMtbWFzdGVyIiwib2ZmbGluZV9hY2Nlc3MiLCJhZG1pbiIsInVtYV9hdXRob3JpemF0aW9uIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsibWFzdGVyLXJlYWxtIjp7InJvbGVzIjpbInZpZXctaWRlbnRpdHktcHJvdmlkZXJzIiwidmlldy1yZWFsbSIsIm1hbmFnZS1pZGVudGl0eS1wcm92aWRlcnMiLCJpbXBlcnNvbmF0aW9uIiwiY3JlYXRlLWNsaWVudCIsIm1hbmFnZS11c2VycyIsInF1ZXJ5LXJlYWxtcyIsInZpZXctYXV0aG9yaXphdGlvbiIsInF1ZXJ5LWNsaWVudHMiLCJxdWVyeS11c2VycyIsIm1hbmFnZS1ldmVudHMiLCJtYW5hZ2UtcmVhbG0iLCJ2aWV3LWV2ZW50cyIsInZpZXctdXNlcnMiLCJ2aWV3LWNsaWVudHMiLCJtYW5hZ2UtYXV0aG9yaXphdGlvbiIsIm1hbmFnZS1jbGllbnRzIiwicXVlcnktZ3JvdXBzIl19LCJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Im9wZW5pZCBlbWFpbCBwcm9maWxlIiwic2lkIjoiZTkxNDFlYWQtNTE0NS00Y2ZkLTg4YmQtNGY2MWMyNDMwNDcwIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhZG1pbiJ9.LkywGnG2BhQ90n-f3vJvX-frq1wRS6DAop5MUcCFb5FSuGvv3oP_byeiuHvh9rh06QWcwhpiTU_L_hOaUzMXF9spJjos8s2iOwK-4o46Ka_4Q2gnlitjd8ZG5wGfuqKRp0vb25RsBpNr6rxGFzOxxmULkjEXOGXbcrqQJBWIaWdRldYunLFRVErIpmH23w4KHKWSB5XkwqpkD9HnLH_PqbaunGpp2acgZ826JpevC8vhEhIg6fxXcDnCKhkw7nNvfs3rCC08Qci32WtzujeKH6js1ASRkKWOUxVkfIkzZ5Yg4Tfdb79_Tgy2iXLT3teeNTepmLsaftn2JzLn_6vHwg
                      refresh: eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI1OGRkY2JhNC1hM2ZkLTQ2MTYtODgyYi1lMGY1ZjRlNzAyMTIifQ.eyJleHAiOjE3Mzg5NTUyNzYsImlhdCI6MTczODk1MzQ3NiwianRpIjoiNjkyZDkxMTAtMjExMy00NTU1LTgxMTctNWYxZTA2NzlmYmUxIiwiaXNzIjoiaHR0cHM6Ly8xMC4zMi4xMC4xODA6MTA0NDMvYXV0aC9yZWFsbXMvbWFzdGVyIiwiYXVkIjoiaHR0cHM6Ly8xMC4zMi4xMC4xODA6MTA0NDMvYXV0aC9yZWFsbXMvbWFzdGVyIiwic3ViIjoiMDY1OTVlMDAtZWIzOS00YWUxLTkzYjctZDMyNzg1MDdiZTUzIiwidHlwIjoiUmVmcmVzaCIsImF6cCI6InRva2VuLWNvbm5lY3QiLCJzZXNzaW9uX3N0YXRlIjoiZTkxNDFlYWQtNTE0NS00Y2ZkLTg4YmQtNGY2MWMyNDMwNDcwIiwic2NvcGUiOiJvcGVuaWQgZW1haWwgcHJvZmlsZSIsInNpZCI6ImU5MTQxZWFkLTUxNDUtNGNmZC04OGJkLTRmNjFjMjQzMDQ3MCJ9._B9rU8TG_YSvwsri48bfne3RxFhc4Yq83bzR43nL4-c
                      expires:
                        access: 7200
                        refresh: 1800
                    msg: create token successfully
                    status: created
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 401
                  msg:
                    type: string
                    example: 'invalid_grant: Invalid user credentials'
                  status:
                    type: string
                    example: unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to create token: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/tunings/parameters":
    get:
      operationId: listTunings
      tags:
      - Tunings
      summary: Retrieve the list of tunings from a host or data center
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: query
        name: host
        required: false
        schema:
          type: string
        description: 'The name of the host to retrieve the tunings, can specify multiple
          hosts to retrieve the tunings, for example: host=example-node-0&host=example-node-1'
        example: example-node-0
      - in: query
        name: keyword
        required: false
        schema:
          type: string
        description: The keyword to search the tunings
        example: can be any string
      - in: query
        name: pageNum
        required: false
        schema:
          type: integer
        description: The page number of the tunings list
        example: 1
      - in: query
        name: pageSize
        required: false
        schema:
          type: integer
        description: The page size of the tunings list
        example: 10
      - "$ref": "#/components/parameters/watch"
      responses:
        '200':
          description: Retrieve the list of tunings from a host or data center successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListTuningResponse"
              examples:
                example:
                  summary: Tuning list
                  value:
                    code: 200
                    data:
                      tunings:
                      - name: neutron.debug.enabled
                        value: false
                        hosts:
                        - example-node-0
                        description: Set to true to enable neutron verbose log.
                        enabled: true
                        isModified: false
                        limitation:
                          type: bool
                          default: false
                      - name: cubesys.provider.extra
                        value: ''
                        hosts:
                        - example-node-0
                        description: Set extra provider interfaces ('pvd-' prefix
                          and <= 15 chars) [IF.2:pvd-xxx,eth2:pvd-yyy,...].
                        enabled: true
                        isModified: false
                        limitation:
                          type: string
                          default: ''
                      - name: barbican.debug.enabled
                        value: false
                        hosts:
                        - example-node-0
                        description: Set to true to enable barbican verbose log.
                        enabled: true
                        isModified: false
                        limitation:
                          type: bool
                          default: false
                      - name: cinder.backup.endpoint
                        value: ''
                        hosts:
                        - example-node-0
                        description: Set cinder backup storage endpoint.
                        enabled: true
                        isModified: false
                        limitation:
                          type: string
                          default: ''
                      - name: influxdb.curator.rp
                        value: 7
                        hosts:
                        - example-node-0
                        - example-node-1
                        description: influxdb curator retention policy in days.
                        enabled: true
                        isModified: false
                        limitation:
                          type: int
                          default: 7
                          min: 0
                          max: 365
                      - name: influxdb.curator.rp
                        value: 23
                        hosts:
                        - example-node-3
                        description: influxdb curator retention policy in days.
                        enabled: false
                        isModified: true
                        limitation:
                          type: int
                          default: 7
                          min: 0
                          max: 365
                      page:
                        total: 15
                        number: 1
                        size: 5
                    msg: fetch tuning list successfully
                    status: ok
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 401
                  msg:
                    type: string
                    example: 'invalid_grant: Invalid user credentials'
                  status:
                    type: string
                    example: unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to list tuning: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/tunings/specs":
    get:
      operationId: listTuningSpecs
      tags:
      - Tunings
      summary: Retrieve the list of tuning spec
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      responses:
        '200':
          description: Retrieve the list of tuning spec successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListTuningSpecResponse"
              examples:
                example:
                  summary: Tuning spec list
                  value:
                    code: 200
                    data:
                    - name: barbican.debug.enabled
                      description: Set to true to enable barbican verbose log.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: ceph.debug.enabled
                      description: Set to true to enable ceph debug logs.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: ceph.mirror.meta.sync
                      description: Set to true to enable automatically volume metadata
                        sync.
                      limitation:
                        type: bool
                        default: true
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cinder.backup.account
                      description: Set cinder backup storage account.
                      limitation:
                        type: string
                        default: ''
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cinder.backup.endpoint
                      description: Set cinder backup storage endpoint.
                      limitation:
                        type: string
                        default: ''
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cinder.backup.override
                      description: Enable override cinder backup configurations.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cinder.backup.pool
                      description: Set cinder backup storage pool.
                      limitation:
                        type: string
                        default: ''
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cinder.backup.secret
                      description: Set cinder backup storage account secret.
                      limitation:
                        type: string
                        default: ''
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cinder.backup.type
                      description: Set cinder backup storage type <cube-storage|cube-swift>.
                      limitation:
                        type: string
                        default: ''
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cinder.debug.enabled
                      description: Set to true to enable cinder verbose log.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cinder.external.%d.account
                      description: Set cinder external storage account.
                      limitation:
                        type: string
                        default: ''
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cinder.external.%d.driver
                      description: Set cinder external storage type name <cube|purestorage>.
                      limitation:
                        type: string
                        default: ''
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cinder.external.%d.endpoint
                      description: Set cinder external storage endpoint.
                      limitation:
                        type: string
                        default: ''
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cinder.external.%d.name
                      description: Set cinder external storage rule name.
                      limitation:
                        type: string
                        default: ''
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cinder.external.%d.pool
                      description: Set cinder external storage pool.
                      limitation:
                        type: string
                        default: ''
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cinder.external.%d.secret
                      description: Set cinder external storage account secret.
                      limitation:
                        type: string
                        default: ''
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cubesys.alert.level
                      description: 'Set health alert sensible level. (0: default,
                        1: highly sensitive)'
                      limitation:
                        type: int
                        default: 0
                        min: 0
                        max: 2147483647
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cubesys.alert.level.%s
                      description: 'Set health alert sensible level for service %s.
                        (0: default, 1: highly sensitive)'
                      limitation:
                        type: int
                        default: 0
                        min: 0
                        max: 2147483647
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cubesys.conntable.max
                      description: Set max connection table size.
                      limitation:
                        type: int
                        default: 262144
                        min: 0
                        max: 2147483647
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cubesys.log.default.retention
                      description: Set log file retention policy in days.
                      limitation:
                        type: int
                        default: 14
                        min: 0
                        max: 365
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cubesys.provider.extra
                      description: Set extra provider interfaces ('pvd-' prefix and
                        <= 15 chars) [IF.2:pvd-xxx,eth2:pvd-yyy,...].
                      limitation:
                        type: string
                        default: ''
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: cyborg.debug.enabled
                      description: Set to true to enable cyborg verbose log.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: debug.enable_core_dump.%s
                      description: Enable core dump for process %s
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: debug.enable_kdump
                      description: Enable kdump to collect dump from kernel panic
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: debug.level.%s
                      description: Set debug level for process %s
                      limitation:
                        type: int
                        default: 0
                        min: 0
                        max: 9
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: debug.max_core_dump
                      description: Set the total number of core files before oldest
                        are removed
                      limitation:
                        type: int
                        default: 0
                        min: 0
                        max: 999
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: designate.debug.enabled
                      description: Set to true to enable designate verbose log.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: glance.debug.enabled
                      description: Set to true to enable glance verbose log.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: glance.export.rp
                      description: glance export retention policy in copies.
                      limitation:
                        type: int
                        default: 3
                        min: 0
                        max: 255
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: heat.debug.enabled
                      description: Set to true to enable heat verbose log.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: influxdb.curator.rp
                      description: influxdb curator retention policy in days.
                      limitation:
                        type: int
                        default: 7
                        min: 0
                        max: 365
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: ironic.debug.enabled
                      description: Set to true to enable ironic verbose log.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: ironic.deploy.server
                      description: Set to true to enable ironic deploy server (dhcp/tftp/pxe/http).
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: kapacitor.alert.check.enabled
                      description: Set true to enable kapacitor alert check.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: kapacitor.alert.check.eventid
                      description: Set kapacitor alert check eventid.
                      limitation:
                        type: string
                        default: SYS00002W
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: kapacitor.alert.check.interval
                      description: Set kapacitor alert check interval (default to
                        60m).
                      limitation:
                        type: string
                        default: 60m
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: kapacitor.alert.extra.prefix
                      description: Set kapacitor alert message prefix.
                      limitation:
                        type: string
                        default: Cube
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: kapacitor.alert.flow.base
                      description: Set kapacitor alert base for abnormal flow.
                      limitation:
                        type: string
                        default: 7d
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: kapacitor.alert.flow.threshold
                      description: Set kapacitor alert threshold for abnormal flow.
                      limitation:
                        type: int
                        default: 30
                        min: 0
                        max: 65535
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: kapacitor.alert.flow.unit
                      description: Set kapacitor alert unit for abnormal flow.
                      limitation:
                        type: string
                        default: 5m
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: keystone.debug.enabled
                      description: Set to true to enable keystone verbose log.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: manila.debug.enabled
                      description: Set to true to enable manila verbose log.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: manila.volume.type
                      description: Set manila backend volume type.
                      limitation:
                        type: string
                        default: CubeStorage
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: masakari.host.evacuate_all
                      description: Set to true to enable evacuate all instances when
                        host goes down.
                      limitation:
                        type: bool
                        default: true
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: masakari.wait.period
                      description: Set wait period after service update
                      limitation:
                        type: int
                        default: 0
                        min: 0
                        max: 99999
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: monasca.debug.enabled
                      description: Set to true to enable monasca verbose log.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: mysql.backup.curator.rp
                      description: mysql backup retention policy in weeks.
                      limitation:
                        type: int
                        default: 14
                        min: 0
                        max: 52
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: net.if.mtu.<name>
                      description: Set interface MTU (MTU of parent interface must
                        be greater than its VLAN interface).
                      limitation:
                        type: int
                        default: 1500
                        min: 68
                        max: 65536
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: net.ipv4.tcp_syncookies
                      description: Turn on the Linux SYN cookies implementation.
                      limitation:
                        type: bool
                        default: true
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: net.lacp.default.rate
                      description: Set default LACP rate (fast/slow).
                      limitation:
                        type: string
                        default: fast
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: net.lacp.default.xmit
                      description: Set default LACP transmit hash policy (layer2/layer2+3/layer3+4).
                      limitation:
                        type: string
                        default: layer3+4
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: neutron.debug.enabled
                      description: Set to true to enable neutron verbose log.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: nova.control.host.memory
                      description: Amount of memory in MB to reserve for the control
                        host.
                      limitation:
                        type: int
                        default: 0
                        min: 0
                        max: 524288
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: nova.control.host.vcpu
                      description: Amount of vcpu to reserve for the control host.
                      limitation:
                        type: int
                        default: 0
                        min: 0
                        max: 128
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: nova.debug.enabled
                      description: Set to true to enable nova verbose log.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: nova.gpu.type
                      description: Specify a supported gpu type instances would get.
                      limitation:
                        type: string
                        default: ''
                      roles: []
                    - name: nova.overcommit.cpu.ratio
                      description: Specify an allowed CPU overcommitted ratio.
                      limitation:
                        type: float
                        default: 16
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: nova.overcommit.disk.ratio
                      description: Specify an allowed disk overcommitted ratio.
                      limitation:
                        type: float
                        default: 1
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: nova.overcommit.ram.ratio
                      description: Specify an allowed RAM overcommitted ratio.
                      limitation:
                        type: float
                        default: 1.5
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: ntp.debug.enabled
                      description: Set to true to enable ntp verbose log.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: octavia.debug.enabled
                      description: Set to true to enable octavia verbose log.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: octavia.ha
                      description: Set to true to enable octavia HA mode.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: opensearch.curator.rp
                      description: opensearch curator retention policy in days.
                      limitation:
                        type: int
                        default: 7
                        min: 0
                        max: 365
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: opensearch.heap.size
                      description: Set opensearch heap size in MB.
                      limitation:
                        type: int
                        default: 1024
                        min: 256
                        max: 65536
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: senlin.debug.enabled
                      description: Set to true to enable senlin verbose log.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: skyline.debug.enabled
                      description: Set to true to enable skyline verbose log.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: snapshot.apply.action
                      description: Set snapshot apply action <apply|revert>.
                      limitation:
                        type: string
                        default: apply
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: snapshot.apply.policy.ignore
                      description: Set snapshot apply policy ignore <true|false>.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: sshd.bind_to_all_interfaces
                      description: Set to true to bind sshd to all interfaces.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: sshd.session.inactivity
                      description: Set sshd session inactivity timeout in seconds.
                      limitation:
                        type: int
                        default: 0
                        min: 0
                        max: 86400
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: time.timezone
                      description: Set system timezone.
                      limitation:
                        type: string
                        default: UTC
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: update.security.autoupdate
                      description: Set to true to enable security autoupdate.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    - name: watcher.debug.enabled
                      description: Set to true to enable watcher verbose log.
                      limitation:
                        type: bool
                        default: false
                      roles:
                      - name: control-converged
                        hosts:
                        - name: example-node-0
                          ip: 10.10.10.10
                    msg: fetch tuning specs successfully
                    status: ok
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 401
                  msg:
                    type: string
                    example: 'invalid_grant: Invalid user credentials'
                  status:
                    type: string
                    example: unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to list tuning specs: internal server error'
                  status:
                    type: string
                    example: internal server error
  "/api/v1/datacenters/{dataCenter}/tunings/parameters/{parameterName}":
    patch:
      operationId: updateTuning
      tags:
      - Tunings
      summary: Update value for a specific tuning parameter
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: path
        name: parameterName
        required: true
        schema:
          type: string
        description: The name of the parameter to update. use GET /api/v1/datacenters/{dataCenter}/tunings/specs
          to get the list of parameters
        example: barbican.debug.enabled
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateTuningRequest"
            examples:
              example:
                summary: Tuning update request
                value:
                  value: true
                  enabled: true
                  roles:
                  - name: control-converged
                    hosts:
                    - name: example-node-0
      responses:
        '202':
          description: Update the tuning successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UpdateTuningResponse"
              examples:
                example:
                  summary: Tuning update request received
                  value:
                    code: 202
                    msg: tuning update request received
                    status: ok
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 400
                  msg:
                    type: string
                    example: invalid parameter name
                  status:
                    type: string
                    example: bad request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 401
                  msg:
                    type: string
                    example: 'invalid_grant: Invalid user credentials'
                  status:
                    type: string
                    example: unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to request tuning update: internal server error'
                  status:
                    type: string
                    example: internal server error
    put:
      operationId: resetTuning
      tags:
      - Tunings
      summary: Reset a specific tuning parameter
      parameters:
      - "$ref": "#/components/parameters/dataCenter"
      - in: path
        name: parameterName
        required: true
        schema:
          type: string
        description: The name of the parameter to reset. use GET /api/v1/datacenters/{dataCenter}/tunings/specs
          to get the list of parameters
        example: barbican.debug.enabled
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ResetTuningRequest"
            examples:
              example:
                summary: Tuning reset request
                value:
                  roles:
                  - name: control-converged
                    hosts:
                    - name: example-node-0
      responses:
        '202':
          description: Reset the tuning successfully
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ResetTuningResponse"
              examples:
                example:
                  summary: Tuning reset request received
                  value:
                    code: 202
                    msg: tuning reset request received
                    status: ok
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 400
                  msg:
                    type: string
                    example: invalid parameter name
                  status:
                    type: string
                    example: bad request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 401
                  msg:
                    type: string
                    example: 'invalid_grant: Invalid user credentials'
                  status:
                    type: string
                    example: unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  msg:
                    type: string
                    example: 'failed to request tuning update: internal server error'
                  status:
                    type: string
                    example: internal server error
components:
  parameters:
    dataCenter:
      in: path
      name: dataCenter
      required: true
      schema:
        type: string
      description: The name of the data center to operate
      example: example-data-center
    watch:
      in: query
      name: watch
      required: false
      schema:
        type: boolean
      description: The toggle to enable http chunked transfer for continuous server
        push.
      example: true
  schemas:
    GetMeResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          type: object
          required:
          - name
          properties:
            name:
              type: string
        msg:
          type: string
        status:
          type: string
    GetDataCentersResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            required:
            - name
            - version
            - virtualIp
            - isHaEnabled
            - isLocal
            - utcTimeZone
            - additional
            properties:
              name:
                type: string
              version:
                type: string
              virtualIp:
                type: string
              isHaEnabled:
                type: boolean
              isLocal:
                type: boolean
              utcTimeZone:
                type: string
              additional:
                type: object
                required:
                - helpUrl
                properties:
                  helpUrl:
                    type: string
        msg:
          type: string
          example: fetch data center list successfully
        status:
          type: string
          example: ok
    GetDataCenterResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        data:
          type: object
          required:
          - name
          - version
          - virtualIp
          - isHaEnabled
          - isLocal
          - utcTimeZone
          - additional
          properties:
            name:
              type: string
            version:
              type: string
            virtualIp:
              type: string
            isHaEnabled:
              type: boolean
            isLocal:
              type: boolean
            utcTimeZone:
              type: string
            additional:
              type: object
              required:
              - helpUrl
              properties:
                helpUrl:
                  type: string
        msg:
          type: string
          example: fetch data center successfully
        status:
          type: string
          example: ok
    GetServicesResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            required:
            - name
            - category
            - modules
            properties:
              name:
                type: string
              category:
                type: string
              modules:
                type: array
                items:
                  type: object
                  required:
                  - name
                  properties:
                    name:
                      type: string
        msg:
          type: string
        status:
          type: string
    GetEventsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        data:
          type: object
          required:
          - events
          - page
          properties:
            events:
              type: array
              items:
                type: object
                required:
                - type
                - severity
                - id
                - description
                - host
                - category
                - service
                - metadata
                - time
                properties:
                  type:
                    type: string
                    example: system
                  severity:
                    type: string
                    example: Info
                  id:
                    type: string
                    example: NET00003I
                  description:
                    type: string
                    example: instance 0125741a-7dbe-4309-bc1a-53d2880d2925 at 192.168.0.91
                      is reachable
                  host:
                    type: string
                    example: bigstack-host
                  category:
                    type: string
                    example: net
                  service:
                    type: string
                    example: neutron
                  metadata:
                    type: object
                    required:
                    - id
                    - ip
                    properties:
                      id:
                        type: string
                        example: 0125741a-7dbe-4309-bc1a-53d2880d2925
                      ip:
                        type: string
                        example: 192.168.0.91
                  time:
                    type: string
                    example: '2025-01-01T01:00:00+00:00'
            page:
              type: object
              required:
              - total
              - number
              - size
              properties:
                total:
                  type: integer
                  example: 10
                number:
                  type: integer
                  example: 1
                size:
                  type: integer
                  example: 1
        msg:
          type: string
          example: fetch events successfully
        status:
          type: string
          example: ok
    GetAbstractedEventsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          type: object
          required:
          - events
          - limit
          properties:
            events:
              type: array
              items:
                type: object
                required:
                - type
                - severity
                - id
                - description
                - host
                - category
                - service
                - metadata
                - time
                properties:
                  type:
                    type: string
                  severity:
                    type: string
                  id:
                    type: string
                  description:
                    type: string
                  host:
                    type: string
                  category:
                    type: string
                  service:
                    type: string
                  metadata:
                    type: object
                    properties:
                      id:
                        type: string
                      ip:
                        type: string
                  time:
                    type: string
            limit:
              type: object
              required:
              - number
              - description
              properties:
                number:
                  type: integer
                description:
                  type: string
        msg:
          type: string
        status:
          type: string
    GetRankedEventsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          type: object
          required:
          - events
          - limit
          properties:
            events:
              type: array
              items:
                type: object
                required:
                - id
                - percent
                - number
                - query
                properties:
                  id:
                    type: string
                  percent:
                    type: number
                  number:
                    type: integer
                  query:
                    type: string
            limit:
              type: object
              required:
              - number
              - description
              properties:
                number:
                  type: integer
                description:
                  type: string
        msg:
          type: string
        status:
          type: string
    GetEventFilterConditionResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          type: object
          required:
          - system
          - instance
          - host
          properties:
            system:
              type: object
              required:
              - severities
              - categories
              properties:
                severities:
                  type: array
                  items:
                    type: string
                categories:
                  type: array
                  items:
                    type: string
            instance:
              type: object
              required:
              - ids
              - categories
              properties:
                ids:
                  type: array
                  items:
                    type: string
                categories:
                  type: array
                  items:
                    type: string
            host:
              type: object
              required:
              - names
              - categories
              properties:
                names:
                  type: array
                  items:
                    type: string
                categories:
                  type: array
                  items:
                    type: string
        msg:
          type: string
        status:
          type: string
    GetHealthsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        data:
          type: object
          required:
          - overall
          - services
          properties:
            overall:
              type: object
              required:
              - status
              properties:
                status:
                  type: object
                  required:
                  - current
                  - isFixing
                  properties:
                    current:
                      type: string
                      enum:
                      - ok
                      - ng
                    isFixing:
                      type: boolean
                    description:
                      type: string
            services:
              type: array
              items:
                required:
                - name
                - category
                - status
                - modules
                properties:
                  name:
                    type: string
                    example: clusterLink
                  category:
                    type: string
                    example: core
                  status:
                    type: object
                    required:
                    - current
                    properties:
                      current:
                        type: string
                        enum:
                        - ok
                        - ng
                  modules:
                    type: array
                    required:
                    - name
                    - status
                    items:
                      type: object
                      required:
                      - name
                      - status
                      properties:
                        name:
                          type: string
                          example: link
                        status:
                          type: object
                          required:
                          - current
                          properties:
                            current:
                              type: string
                              enum:
                              - ok
                              - ng
        msg:
          type: string
          example: fetch health successfully
        status:
          type: string
          example: ok
    GetServiceHealthHistoryResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          type: array
          items:
            type: object
            required:
            - category
            - service
            - history
            - module
            properties:
              category:
                type: string
              service:
                type: string
              history:
                type: array
                items:
                  type: object
                  required:
                  - time
                  - status
                  properties:
                    time:
                      type: string
                      format: date-time
                    status:
                      type: string
                      enum:
                      - ok
                      - ng
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                        reason:
                          type: string
                        nodes:
                          type: array
                          items:
                            type: string
                        description:
                          type: string
                        details:
                          type: string
                        log:
                          type: string
                          format: uri
              module:
                type: string
        msg:
          type: string
        status:
          type: string
    PatchRepairResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        msg:
          type: string
        status:
          type: string
    PatchModuleRepairResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
          example: 202
        msg:
          type: string
          example: the request of unhealthy module repair is accepted and repairing
        status:
          type: string
          example: accepted
    GetModuleHealthHistoryResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          type: object
          required:
          - category
          - name
          - module
          - history
          properties:
            category:
              type: string
            service:
              type: string
            module:
              type: string
            history:
              type: array
              items:
                type: object
                required:
                - time
                - status
                properties:
                  time:
                    type: string
                    format: date-time
                  status:
                    type: string
                    enum:
                    - ok
                    - ng
                  error:
                    type: object
                    properties:
                      type:
                        type: string
                      nodes:
                        type: array
                        items:
                          type: string
                      description:
                        type: string
                      details:
                        type: string
                      log:
                        type: string
                        format: uri
        msg:
          type: string
        status:
          type: string
    GetIntegrationsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            required:
            - name
            - isHeaderShortcutEnabled
            - description
            - isBuiltIn
            - url
            properties:
              name:
                type: string
                example: openstack
              isHeaderShortcutEnabled:
                type: boolean
                example: true
              description:
                type: string
                example: openstack dashboard
              isBuiltIn:
                type: boolean
                example: true
              url:
                type: string
                example: https://10.10.10.10/skyline
        msg:
          type: string
          example: fetch integrations successfully
        status:
          type: string
          example: ok
    GetLicensesResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        data:
          type: object
          properties:
            licenses:
              type: array
              items:
                type: object
                required:
                - type
                - hostname
                - serial
                - product
                - issue
                - quantity
                - serviceLevelAgreement
                - expiry
                properties:
                  type:
                    type: string
                  hostname:
                    type: string
                  serial:
                    type: string
                  product:
                    type: object
                    required:
                    - name
                    - features
                    properties:
                      name:
                        type: string
                      features:
                        type: object
                  issue:
                    type: object
                    required:
                    - by
                    - to
                    - hardware
                    - date
                    properties:
                      by:
                        type: string
                      to:
                        type: string
                      hardware:
                        type: string
                      date:
                        type: string
                  quantity:
                    type: object
                    required:
                    - type
                    - vcpu
                    properties:
                      type:
                        type: string
                      vcpu:
                        type: integer
                  serviceLevelAgreement:
                    type: object
                    required:
                    - uptime
                    - period
                    - meanTimeBetweenFailure
                    - meanTimeToRecovery
                    properties:
                      uptime:
                        type: number
                      period:
                        type: string
                      meanTimeBetweenFailure:
                        type: string
                      meanTimeToRecovery:
                        type: string
                  expiry:
                    type: object
                    required:
                    - date
                    - days
                    properties:
                      date:
                        type: string
                      days:
                        type: integer
            page:
              type: object
              required:
              - total
              - number
              - size
              properties:
                total:
                  type: integer
                number:
                  type: integer
                size:
                  type: integer
        msg:
          type: string
        status:
          type: string
    PostLicenseRequest:
      type: object
      required:
      - license
      properties:
        license:
          type: string
          format: binary
          description: License file (must have a .license extension)
    PostLicenseResponse:
      type: object
      required:
      - code
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        data:
          type: object
          example: 
        msg:
          type: string
          example: update licenses successfully
        status:
          type: string
          example: ok
    GetMetricsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        data:
          type: object
          required:
          - dataCenter
          - host
          - vm
          properties:
            dataCenter:
              type: object
              required:
              - usage
              properties:
                usage:
                  type: object
                  required:
                  - cpu
                  - memory
                  properties:
                    cpu:
                      type: object
                      required:
                      - totalCores
                      - usedCores
                      - usedPercent
                      - freeCores
                      - freePercent
                      properties:
                        totalCores:
                          type: integer
                          example: 80
                        usedCores:
                          type: integer
                          example: 31
                        usedPercent:
                          type: number
                          example: 38.75
                        freeCores:
                          type: integer
                          example: 49
                        freePercent:
                          type: number
                          example: 61.25
                    memory:
                      type: object
                      required:
                      - totalMiB
                      - usedMiB
                      - value
                      - freeMiB
                      - freePercent
                      properties:
                        totalMiB:
                          type: integer
                          example: 257371
                        usedMiB:
                          type: integer
                          example: 98255
                        value:
                          type: number
                          example: 38.2
                        freeMiB:
                          type: integer
                          example: 159116
                        freePercent:
                          type: number
                          example: 61.8
            host:
              type: object
              required:
              - role
              - usages
              properties:
                role:
                  type: object
                  required:
                  - controlConverged
                  - control
                  - compute
                  - storage
                  - edgeCore
                  - moderator
                  properties:
                    controlConverged:
                      "$ref": "#/components/schemas/roleUsage"
                    control:
                      "$ref": "#/components/schemas/roleUsage"
                    compute:
                      "$ref": "#/components/schemas/roleUsage"
                    storage:
                      "$ref": "#/components/schemas/roleUsage"
                    edgeCore:
                      "$ref": "#/components/schemas/roleUsage"
                    moderator:
                      "$ref": "#/components/schemas/roleUsage"
                usages:
                  type: array
                  items:
                    type: object
                    required:
                    - role
                    - name
                    - address
                    - usage
                    properties:
                      role:
                        type: string
                      name:
                        type: string
                      address:
                        type: string
                      usage:
                        type: object
                        required:
                        - cpu
                        - memory
                        properties:
                          cpu:
                            type: object
                            required:
                            - totalCores
                            - usedCores
                            - usedPercent
                            - freeCores
                            - freePercent
                            properties:
                              totalCores:
                                type: integer
                              usedCores:
                                type: integer
                              usedPercent:
                                type: number
                              freeCores:
                                type: integer
                              freePercent:
                                type: number
                          memory:
                            type: object
                            required:
                            - totalMiB
                            - usedMiB
                            - value
                            - freeMiB
                            - freePercent
                            properties:
                              totalMiB:
                                type: integer
                              usedMiB:
                                type: integer
                              value:
                                type: number
                              freeMiB:
                                type: integer
                              freePercent:
                                type: number
            vm:
              type: object
              required:
              - status
              - usage
              properties:
                status:
                  type: object
                  required:
                  - total
                  - running
                  - stopped
                  - paused
                  - suspend
                  - error
                  properties:
                    total:
                      type: integer
                      example: 10
                    running:
                      type: integer
                      example: 8
                    stopped:
                      type: integer
                      example: 2
                    paused:
                      type: integer
                      example: 0
                    suspend:
                      type: integer
                      example: 0
                    error:
                      type: integer
                      example: 0
                usage:
                  type: object
                  required:
                  - vcpu
                  - memory
                  - storage
                  properties:
                    vcpu:
                      type: object
                      required:
                      - totalCores
                      - usedCores
                      - freeCores
                      - usedPercent
                      - freePercent
                      properties:
                        totalCores:
                          type: integer
                          example: 80
                        usedCores:
                          type: integer
                          example: 31
                        freeCores:
                          type: integer
                          example: 49
                        usedPercent:
                          type: number
                          example: 38.75
                        freePercent:
                          type: number
                          example: 61.25
                    memory:
                      type: object
                      required:
                      - totalMiB
                      - usedMiB
                      - freeMiB
                      - value
                      - freePercent
                      properties:
                        totalMiB:
                          type: integer
                          example: 257371
                        usedMiB:
                          type: integer
                          example: 98255
                        freeMiB:
                          type: integer
                          example: 159116
                        value:
                          type: number
                          example: 38.2
                        freePercent:
                          type: number
                          example: 61.8
                    storage:
                      type: object
                      required:
                      - totalMiB
                      - usedMiB
                      - freeMiB
                      - value
                      - freePercent
                      properties:
                        totalMiB:
                          type: integer
                          example: 102400
                        usedMiB:
                          type: integer
                          example: 51200
                        freeMiB:
                          type: integer
                          example: 51200
                        value:
                          type: number
                          example: 50.1
                        freePercent:
                          type: number
                          example: 50.1
        msg:
          type: string
          example: fetch summary successfully
        status:
          type: string
          example: ok
    GetCpuUsageSummaryOfHostsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          type: object
          required:
          - totalCores
          - usedCores
          - usedPercent
          - freeCores
          - freePercent
          properties:
            totalCores:
              type: integer
            usedCores:
              type: integer
            usedPercent:
              type: number
            freeCores:
              type: integer
            freePercent:
              type: number
        msg:
          type: string
          example: fetch metrics successfully
        status:
          type: string
          example: ok
    GetCpuUsageRankOfHostsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          "$ref": "#/components/schemas/metricRank"
        msg:
          type: string
          example: fetch metrics successfully
        status:
          type: string
          example: ok
    GetMemoryUsageSummaryOfHostsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          type: object
          required:
          - totalMiB
          - usedMiB
          - value
          - freeMiB
          - freePercent
          properties:
            totalMiB:
              type: integer
            usedMiB:
              type: integer
            value:
              type: number
            freeMiB:
              type: integer
            freePercent:
              type: number
        msg:
          type: string
          example: fetch metrics successfully
        status:
          type: string
          example: ok
    GetMemoryUsageRankOfHostsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          "$ref": "#/components/schemas/metricRank"
        msg:
          type: string
          example: fetch metrics successfully
        status:
          type: string
          example: ok
    GetDiskUsageRankOfHostsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          "$ref": "#/components/schemas/metricRank"
        msg:
          type: string
          example: fetch metrics successfully
        status:
          type: string
          example: ok
    GetDiskBandwidthHistoryOfHostsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          "$ref": "#/components/schemas/diskReadWriteHistory"
        msg:
          type: string
        status:
          type: string
    GetDiskIopsHistoryOfHostsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          "$ref": "#/components/schemas/diskReadWriteHistory"
        msg:
          type: string
        status:
          type: string
    GetDiskLatencyHistoryOfHostsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          "$ref": "#/components/schemas/diskReadWriteHistory"
        msg:
          type: string
        status:
          type: string
    GetNetworkTrafficInRankOfHostsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          "$ref": "#/components/schemas/metricRank"
        msg:
          type: string
          example: fetch metrics successfully
        status:
          type: string
          example: ok
    GetNetworkTrafficOutRankOfHostsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          "$ref": "#/components/schemas/metricRank"
        msg:
          type: string
          example: fetch metrics successfully
        status:
          type: string
          example: ok
    GetCpuUsageRankOfVmsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          "$ref": "#/components/schemas/metricRank"
        msg:
          type: string
          example: fetch metrics successfully
        status:
          type: string
          example: ok
    GetMemoryUsageSummaryOfVmsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          type: object
          required:
          - totalMiB
          - usedMiB
          - value
          - freeMiB
          - freePercent
          properties:
            totalMiB:
              type: integer
            usedMiB:
              type: integer
            value:
              type: number
            freeMiB:
              type: integer
            freePercent:
              type: number
        msg:
          type: string
          example: fetch metrics successfully
        status:
          type: string
          example: ok
    GetMemoryUsageRankOfVmsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          "$ref": "#/components/schemas/metricRank"
        msg:
          type: string
          example: fetch metrics successfully
        status:
          type: string
          example: ok
    GetDiskReadIopsRankOfVmsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          "$ref": "#/components/schemas/metricRank"
        msg:
          type: string
          example: fetch metrics successfully
        status:
          type: string
          example: ok
    GetDiskWriteIopsRankOfVmsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          "$ref": "#/components/schemas/metricRank"
        msg:
          type: string
          example: fetch metrics successfully
        status:
          type: string
          example: ok
    GetNetworkTrafficInRankOfVmsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          "$ref": "#/components/schemas/metricRank"
        msg:
          type: string
          example: fetch metrics successfully
        status:
          type: string
          example: ok
    GetNetworkTrafficOutRankOfVmsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          "$ref": "#/components/schemas/metricRank"
        msg:
          type: string
          example: fetch metrics successfully
        status:
          type: string
          example: ok
    GetNodesResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        data:
          type: object
          required:
          - nodes
          - page
          properties:
            nodes:
              type: array
              items:
                type: object
                required:
                - id
                - hostname
                - role
                - address
                - managementIP
                - license
                - status
                - vcpu
                - memory
                - storage
                - uptimeSeconds
                - labels
                properties:
                  id:
                    type: string
                  hostname:
                    type: string
                  role:
                    type: string
                  address:
                    type: string
                  managementIP:
                    type: string
                  license:
                    type: object
                    required:
                    - status
                    - hostname
                    - serial
                    - product
                    - issue
                    - serviceLevelAgreement
                    - expiry
                    properties:
                      status:
                        type: string
                      hostname:
                        type: string
                      serial:
                        type: string
                      product:
                        type: object
                        required:
                        - name
                        - features
                        properties:
                          name:
                            type: string
                          features:
                            type: object
                            required:
                            - name
                            properties:
                              name:
                                type: string
                      issue:
                        type: object
                        required:
                        - by
                        - to
                        - hardware
                        - date
                        properties:
                          by:
                            type: string
                          to:
                            type: string
                          hardware:
                            type: string
                          date:
                            type: string
                      serviceLevelAgreement:
                        type: object
                        required:
                        - uptime
                        - period
                        - meanTimeBetweenFailure
                        - meanTimeToRepair
                        - expire
                        properties:
                          uptime:
                            type: number
                          period:
                            type: string
                          meanTimeBetweenFailure:
                            type: string
                          meanTimeToRepair:
                            type: string
                      expiry:
                        type: object
                        required:
                        - date
                        - days
                        properties:
                          date:
                            type: string
                          days:
                            type: integer
                  status:
                    type: string
                  vcpu:
                    type: object
                    required:
                    - totalCores
                    - usedCores
                    - freeCores
                    properties:
                      totalCores:
                        type: integer
                      usedCores:
                        type: integer
                      freeCores:
                        type: integer
                  memory:
                    type: object
                    required:
                    - totalMiB
                    - usedMiB
                    - freeMiB
                    properties:
                      totalMiB:
                        type: integer
                      usedMiB:
                        type: integer
                      freeMiB:
                        type: integer
                  storage:
                    type: object
                    required:
                    - totalMiB
                    - usedMiB
                    - freeMiB
                    properties:
                      totalMiB:
                        type: integer
                      usedMiB:
                        type: integer
                      freeMiB:
                        type: integer
                  uptimeSeconds:
                    type: number
                  labels:
                    type: object
                    required:
                    - isGpuEnabled
                    properties:
                      isGpuEnabled:
                        type: string
            page:
              type: object
              required:
              - total
              - number
              - size
              properties:
                total:
                  type: integer
                  example: 10
                number:
                  type: integer
                  example: 1
                size:
                  type: integer
                  example: 1
        msg:
          type: string
          example: fetch nodes successfully
        status:
          type: string
          example: ok
    GetTokensRequest:
      type: object
      required:
      - name
      - password
      properties:
        name:
          type: string
          description: the name of user to generate the token
          example: example-name
        password:
          type: string
          description: the password of user to generate the token
          example: example-password
    GetTokensResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          type: object
          required:
          - token
          - refresh
          - expires
          properties:
            token:
              type: string
            refresh:
              type: string
            expires:
              type: object
              required:
              - access
              - refresh
              properties:
                access:
                  type: integer
                refresh:
                  type: integer
        msg:
          type: string
        status:
          type: string
    TitlePrefix:
      type: object
      required:
      - value
      properties:
        value:
          type: string
    EmailSender:
      type: object
      required:
      - host
      - port
      - username
      - password
      - email
      - accessVerified
      properties:
        host:
          type: string
        port:
          type: integer
        username:
          type: string
        password:
          type: string
        email:
          type: string
        accessVerified:
          type: boolean
    TryEmailSender:
      type: object
      required:
      - email
      properties:
        email:
          type: string
    EmailRecipient:
      type: object
      required:
      - email
      - note
      - isTestable
      properties:
        email:
          type: string
        note:
          type: string
        isTestable:
          type: boolean
    SlackChannel:
      type: object
      required:
      - name
      - url
      - description
      properties:
        name:
          type: string
        url:
          type: string
        description:
          type: string
    GetSettingResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          type: object
          required:
          - titlePrefix
          - email
          - slack
          properties:
            titlePrefix:
              type: string
            email:
              type: object
              required:
              - senders
              - recipients
              properties:
                senders:
                  type: array
                  items:
                    "$ref": "#/components/schemas/EmailSender"
                recipients:
                  type: array
                  items:
                    "$ref": "#/components/schemas/EmailRecipient"
            slack:
              type: object
              properties:
                channel:
                  "$ref": "#/components/schemas/SlackChannel"
        msg:
          type: string
        status:
          type: string
    UpdateTitlePrefixResponse:
      type: object
      required:
      - code
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        msg:
          type: string
          example: title prefix updated successfully
        status:
          type: string
          example: ok
    PostEmailSenderResponse:
      type: object
      required:
      - code
      - msg
      - status
      properties:
        code:
          type: integer
          example: 201
        msg:
          type: string
          example: email senders created successfully
        status:
          type: string
          example: ok
    TryEmailSenderResponse:
      type: object
      required:
      - code
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        msg:
          type: string
          example: email sender tried successfully
        status:
          type: string
          example: ok
    GetEmailSendersResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        data:
          type: object
          properties:
            emailSenders:
              type: array
              items:
                "$ref": "#/components/schemas/EmailSender"
        msg:
          type: string
          example: email senders retrieved successfully
        status:
          type: string
          example: ok
    PutEmailSenderResponse:
      type: object
      required:
      - code
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        msg:
          type: string
          example: email senders updated successfully
        status:
          type: string
          example: ok
    DeleteEmailSenderResponse:
      type: object
      required:
      - code
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        msg:
          type: string
          example: email senders deleted successfully
        status:
          type: string
          example: ok
    PostEmailRecipientResponse:
      type: object
      required:
      - code
      - msg
      - status
      properties:
        code:
          type: integer
          example: 201
        msg:
          type: string
          example: email recipient created successfully
        status:
          type: string
          example: ok
    GetEmailRecipientsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
        data:
          type: array
          items:
            "$ref": "#/components/schemas/EmailRecipient"
        msg:
          type: string
        status:
          type: string
    TryEmailRecipientResponse:
      type: object
      required:
      - code
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        msg:
          type: string
          example: email recipient tried successfully
        status:
          type: string
          example: ok
    PutEmailRecipientResponse:
      type: object
      required:
      - code
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        msg:
          type: string
          example: email recipient updated successfully
        status:
          type: string
          example: ok
    DeleteEmailRecipientResponse:
      type: object
      required:
      - code
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        msg:
          type: string
          example: email recipient deleted successfully
        status:
          type: string
          example: ok
    PostSlackChannelResponse:
      type: object
      required:
      - code
      - msg
      - status
      properties:
        code:
          type: integer
          example: 201
        msg:
          type: string
          example: slack channel created successfully
        status:
          type: string
          example: ok
    GetSlackChannelsResponse:
      type: object
      required:
      - code
      - data
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        data:
          type: array
          items:
            "$ref": "#/components/schemas/SlackChannel"
        msg:
          type: string
          example: slack channels retrieved successfully
        status:
          type: string
          example: ok
    TrySlackChannelResponse:
      type: object
      required:
      - code
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        msg:
          type: string
          example: slack channel tried successfully
        status:
          type: string
          example: ok
    PutSlackChannelResponse:
      type: object
      required:
      - code
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        msg:
          type: string
          example: slack channel updated successfully
        status:
          type: string
          example: ok
    DeleteSlackChannelResponse:
      type: object
      required:
      - code
      - msg
      - status
      properties:
        code:
          type: integer
          example: 200
        msg:
          type: string
          example: slack channel deleted successfully
        status:
          type: string
          example: ok
    ListTuningResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            required:
            - name
            - value
            - hosts
            - description
            - enabled
            - isModified
            - limitation
            properties:
              name:
                type: string
              value:
                type: string
              hosts:
                type: array
                items:
                  type: string
              description:
                type: string
              enabled:
                type: boolean
              isModified:
                type: boolean
              limitation:
                type: object
                required:
                - type
                - default
                - min
                - max
                properties:
                  type:
                    type: string
                  default:
                    oneOf:
                    - type: string
                    - type: integer
                    - type: number
                    - type: boolean
                  min:
                    oneOf:
                    - type: integer
                    - type: number
                  max:
                    oneOf:
                    - type: integer
                    - type: number
        msg:
          type: string
          example: tuning list retrieved successfully
        status:
          type: string
          example: ok
    ListTuningSpecResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        data:
          type: array
          items:
            type: object
            required:
            - name
            - description
            - limitation
            - roles
            - selector
            properties:
              name:
                type: string
              description:
                type: string
              limitation:
                type: object
                required:
                - type
                - default
                properties:
                  type:
                    type: string
                  default:
                    oneOf:
                    - type: string
                    - type: integer
                    - type: number
                    - type: boolean
                  min:
                    oneOf:
                    - type: integer
                    - type: number
                  max:
                    oneOf:
                    - type: integer
                    - type: number
              roles:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    hosts:
                      type: array
                      items:
                        type: object
                        required:
                        - name
                        - ip
                        properties:
                          name:
                            type: string
                          ip:
                            type: string
        msg:
          type: string
        status:
          type: string
    UpdateTuningRequest:
      type: object
      required:
      - value
      - enabled
      - roles
      properties:
        value:
          type: boolean
        enabled:
          type: boolean
        roles:
          type: array
          items:
            type: object
            required:
            - name
            - hosts
            properties:
              name:
                type: string
              hosts:
                type: array
                items:
                  type: object
                  required:
                  - name
                  - ip
                  properties:
                    name:
                      type: string
    ResetTuningRequest:
      type: object
      required:
      - roles
      properties:
        roles:
          type: array
          items:
            type: object
            required:
            - name
            - hosts
            properties:
              name:
                type: string
              hosts:
                type: array
                items:
                  type: object
                  required:
                  - name
                  properties:
                    name:
                      type: string
    UpdateTuningResponse:
      type: object
      required:
      - code
      - msg
      - status
      properties:
        code:
          type: integer
        msg:
          type: string
        status:
          type: string
    ResetTuningResponse:
      type: object
      required:
      - code
      - msg
      - status
      properties:
        code:
          type: integer
        msg:
          type: string
        status:
          type: string
    metricRank:
      type: object
      required:
      - unit
      - rank
      properties:
        unit:
          type: string
        rank:
          type: array
          items:
            type: object
            required:
            - id
            - name
            - value
            - history
            properties:
              id:
                type: string
              name:
                type: string
              device:
                type: string
              value:
                type: number
              history:
                type: array
                items:
                  type: object
                  required:
                  - time
                  - value
                  properties:
                    time:
                      type: string
                      format: date-time
                    value:
                      type: number
    diskReadWriteHistory:
      type: object
      required:
      - unit
      - read
      - write
      properties:
        unit:
          type: string
        read:
          type: array
          items:
            type: object
            required:
            - time
            - value
            properties:
              time:
                type: string
                format: date-time
              value:
                type: number
        write:
          type: array
          items:
            type: object
            required:
            - time
            - value
            properties:
              time:
                type: string
                format: date-time
              value:
                type: number
    roleUsage:
      type: object
      required:
      - count
      - cpu
      - memory
      properties:
        count:
          type: integer
        cpu:
          type: object
          required:
          - totalCores
          - usedCores
          - freeCores
          - usedPercent
          - freePercent
          properties:
            totalCores:
              type: number
            usedCores:
              type: number
            freeCores:
              type: number
            usedPercent:
              type: number
            freePercent:
              type: number
        memory:
          type: object
          required:
          - totalMiB
          - usedMiB
          - freeMiB
          - usedPercent
          - freePercent
          properties:
            totalMiB:
              type: number
            usedMiB:
              type: number
            freeMiB:
              type: number
            usedPercent:
              type: number
            freePercent:
              type: number
